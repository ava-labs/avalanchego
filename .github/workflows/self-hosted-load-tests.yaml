name: Load test on self-hosted runners

# This workflow runs load tests against our Kubernetes cluster
on:
  workflow_dispatch:
    inputs:
      avalanchego_image:
        description: 'AvalancheGo image to test'
        required: false
        default: 'avaplatform/avalanchego:latest'
        type: string
      exclusive_scheduling:
        description: 'Enable exclusive scheduling'
        required: false
        default: false
        type: boolean
      duration:
        description: "Load test duration: e.g. 5m, 10m, 1h..."
        required: false

jobs:
  load_test:
    name: Run load test on self-hosted runners
    runs-on: avalanche-avalanchego-runner
    container:
      image: ghcr.io/actions/actions-runner:2.325.0
    steps:
      - name: Install dependencies
        shell: bash
        # The xz-utils might be present on some containers
        run: |
          if ! command -v xz &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y xz-utils
          fi
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-go-for-project
      - name: Run load test
        uses: ./.github/actions/run-monitored-tmpnet-cmd
        with:
          run: >-
            ./scripts/run_task.sh test-load-kube --
            --kube-image ${{ inputs.avalanchego_image }}
            ${{ inputs.exclusive_scheduling == 'true' && '--kube-use-exclusive-scheduling' || '' }}
            ${{ inputs.duration && format('--duration {0}', inputs.duration) || '' }}
          artifact_prefix: self-hosted-load-test${{ inputs.exclusive_scheduling == 'true' && '-exclusive' || '' }}
          prometheus_url: ${{ secrets.PROMETHEUS_URL || '' }}
          prometheus_push_url: ${{ secrets.PROMETHEUS_PUSH_URL || '' }}
          prometheus_username: ${{ secrets.PROMETHEUS_USERNAME || '' }}
          prometheus_password: ${{ secrets.GRAFANA_CLOUD_TOKEN || '' }}
          loki_url: ${{ secrets.LOKI_URL || '' }}
          loki_push_url: ${{ secrets.LOKI_PUSH_URL || '' }}
          loki_username: ${{ secrets.LOKI_USERNAME || '' }}
          loki_password: ${{ secrets.GRAFANA_CLOUD_TOKEN || '' }}
