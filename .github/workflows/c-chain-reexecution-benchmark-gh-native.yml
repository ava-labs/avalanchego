name: C-Chain Re-Execution Benchmark GH Native

on:
  pull_request:
  workflow_dispatch:
    inputs:
      config:
        description: 'The config to pass to the VM for the benchmark. See BenchmarkReexecuteRange for details.'
        required: false
        default: ''
      start-block:
        description: 'The start block for the benchmark.'
        required: false
        default: 101
      end-block:
        description: 'The end block for the benchmark.'
        required: false
        default: 250000
      source-block-dir:
        description: 'The source block directory. Supports S3 directory/zip and local directories.'
        required: false
        default: s3://avalanchego-bootstrap-testing/cchain-mainnet-blocks-1m-ldb/**
      current-state-dir:
        description: 'The current state directory. Supports S3 directory/zip and local directories.'
        required: false
        default: s3://avalanchego-bootstrap-testing/cchain-current-state-hashdb-full-100/**
      runner:
        description: 'Runner to execute the benchmark. Input to the runs-on field of the job.'
        required: false
        default: ubuntu-latest
      push-post-state:
        description: 'S3 location to push post-execution state directory. Skips this step if left unpopulated.'
        default: ''

  schedule:
    - cron: '0 9 * * *' # Runs every day at 09:00 UTC (04:00 EST)

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.define-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Define Matrix
        id: define-matrix
        shell: bash -x {0}
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            {
              echo "matrix<<EOF"
              printf '{ "include": [{ "start-block": "%s", "end-block": "%s", "source-block-dir": "%s", "current-state-dir": "%s", "config": "%s", "runner": "%s" }] }\n' \
                "${{ github.event.inputs.start-block }}" \
                "${{ github.event.inputs.end-block }}" \
                "${{ github.event.inputs.source-block-dir }}" \
                "${{ github.event.inputs.current-state-dir }}" \
                "${{ github.event.inputs.config }}" \
                "${{ github.event.inputs.runner }}"
              echo EOF
            } >> "$GITHUB_OUTPUT"
          else
            json_string=$(jq -r ".\"${{ github.event_name }}\"" .github/workflows/c-chain-reexecution-benchmark-gh-native.json)
            {
              echo "matrix<<EOF"
              echo "$json_string"
              echo EOF
            } >> "$GITHUB_OUTPUT"
          fi

  c-chain-reexecution:
    needs: define-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.define-matrix.outputs.matrix) }}
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'ava-labs/avalanchego' }}
    permissions:
      id-token: write
      contents: write
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: Run C-Chain Re-Execution Benchmark
        uses: ./.github/actions/c-chain-reexecution-benchmark
        with:
          config: ${{ matrix.config }}
          start-block: ${{ matrix.start-block }}
          end-block: ${{ matrix.end-block }}
          source-block-dir: ${{ matrix.source-block-dir }}
          current-state-dir: ${{ matrix.current-state-dir }}
          prometheus-username: ${{ secrets.PROMETHEUS_ID || '' }}
          prometheus-password: ${{ secrets.PROMETHEUS_PASSWORD || '' }}
          push-github-action-benchmark: ${{ github.event_name == 'schedule' }}
          aws-role: ${{ github.event.inputs.push-post-state != '' && secrets.AWS_S3_RW_ROLE || secrets.AWS_S3_READ_ONLY_ROLE }}
          aws-region: 'us-east-2'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-post-state: ${{ github.event.inputs.push-post-state }}
