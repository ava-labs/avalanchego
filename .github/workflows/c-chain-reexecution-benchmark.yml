name: C-Chain Re-Execution Benchmark

on:
  pull_request:
  workflow_dispatch:
    inputs:
      start-block:
        description: 'The start block for the benchmark.'
        required: false
        default: 101
      end-block:
        description: 'The end block for the benchmark.'
        required: false
        default: 250000
      source-block-dir:
        description: 'The source block directory. Supports S3 directory/zip and local directories.'
        required: false
        default: s3://avalanchego-bootstrap-testing/cchain-mainnet-blocks-1m-ldb.zip
      current-state-dir:
        description: 'The current state directory. Supports S3 directory/zip and local directories.'
        required: false
        default: s3://avalanchego-bootstrap-testing/cchain-current-state-hashdb-full-100.zip
  schedule:
    - cron: '0 6 * * 0' # Runs every Sunday at 06:00 UTC

jobs:
    c-chain-reexecution:
      permissions:
        id-token: write
        contents: write
      runs-on: avalanche-avalanchego-runner-2ti
      container:
        image: ghcr.io/actions/actions-runner:2.325.0
      steps:
        - name: Install dependencies
          shell: bash
          run: |
            # The xz-utils might be present on some containers
            if ! command -v xz &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y xz-utils
            fi
        - name: Install fio
          shell: bash
          run: |
            sudo apt-get update
            sudo apt-get install -y fio
        - name: Run fio random latency test
          shell: bash
          run: |
            fio --name=random-latency-test \
                --ioengine=posixaio \
                --rw=randrw \
                --bs=4k \
                --iodepth=64 \
                --size=1G \
                --numjobs=1 \
                --runtime=60 \
                --group_reporting \
                --filename=test_file \
                --direct=1 \
                --randrepeat=0
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: ${{ secrets.AWS_S3_READ_ONLY_ROLE }}
            aws-region: us-east-2
        - name: Set task env via GITHUB_ENV
          id: set-params
          run: |
            {
              echo "START_BLOCK=${{ github.event.inputs.start-block || 101 }}"
              echo "END_BLOCK=${{ github.event.inputs.end-block || 250000 }}"
              echo "SOURCE_BLOCK_DIR=${{ github.event.inputs.source-block-dir || 's3://avalanchego-bootstrap-testing/cchain-mainnet-blocks-1m-ldb.zip' }}"
              echo "CURRENT_STATE_DIR=${{ github.event.inputs.current-state-dir || 's3://avalanchego-bootstrap-testing/cchain-current-state-hashdb-full-100.zip' }}"
            } >> "$GITHUB_ENV"
        - uses: actions/checkout@v4
        - uses: ./.github/actions/setup-go-for-project
        - name: Run C-Chain Re-Execution
          uses: ./.github/actions/run-monitored-tmpnet-cmd
          with:
            run: ./scripts/run_task.sh reexecute-cchain-range-with-copied-data EXECUTION_DATA_DIR=$GITHUB_WORKSPACE/reexecution-data BENCHMARK_OUTPUT_FILE=$GITHUB_WORKSPACE/reexecute-cchain-range-benchmark-res.txt
            prometheus_username: ${{ secrets.PROMETHEUS_ID || '' }}
            prometheus_password: ${{ secrets.PROMETHEUS_PASSWORD || '' }}
            grafana_dashboard_id: 'Gl1I20mnk/c-chain'
            loki_username: ${{ secrets.LOKI_ID || '' }}
            loki_password: ${{ secrets.LOKI_PASSWORD || '' }}
            runtime: "" # Set runtime input to empty string to disable log collection
        - name: Download Previous Benchmark Result
          uses: actions/cache@v4
          with:
            path: ./cache
            key: ${{ runner.os }}-reexecute-cchain-range-benchmark.json
        - name: Compare Benchmark Results
          uses: benchmark-action/github-action-benchmark@v1
          with:
            tool: 'go'
            output-file-path: $GITHUB_WORKSPACE/reexecute-cchain-range-benchmark-res.txt
            external-data-json-path: ./cache/${{ runner.os }}-reexecute-cchain-range-benchmark.json
            fail-on-alert: true
            github-token: ${{ secrets.GITHUB_TOKEN }}
            summary-always: true
            comment-on-alert: true
