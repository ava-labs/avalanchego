name: C-Chain Re-Execution Benchmark

on:
  pull_request:
  workflow_dispatch:
    inputs:
      start-block:
        description: 'The start block for the benchmark.'
        required: false
        default: 101
      end-block:
        description: 'The end block for the benchmark.'
        required: false
        default: 250000
      source-block-dir:
        description: 'The source block directory. Supports S3 directory/zip and local directories.'
        required: false
        default: s3://avalanchego-bootstrap-testing/cchain-mainnet-blocks-1m-ldb.zip
      current-state-dir:
        description: 'The current state directory. Supports S3 directory/zip and local directories.'
        required: false
        default: s3://avalanchego-bootstrap-testing/cchain-current-state-hashdb-full-100.zip
      runner:
        description: 'Runner to execute the benchmark. Input to the runs-on field of the job.'
        required: false
        default: ubuntu-latest

  schedule:
    - cron: '0 9 * * *' # Runs every day at 09:00 UTC (04:00 EST)

jobs:
    c-chain-reexecution:
      if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'ava-labs/avalanchego'
      permissions:
        id-token: write
        contents: write
      runs-on: ${{ github.event.inputs.runner || 'ubuntu-latest' }}
      steps:
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: ${{ secrets.AWS_S3_READ_ONLY_ROLE }}
            aws-region: us-east-2
        - name: Set task env via GITHUB_ENV
          id: set-params
          run: |
            if [[ "${{ github.event_name }}" == "schedule" ]]; then
              {
                echo "START_BLOCK=101"
                echo "END_BLOCK=250000"
                echo "SOURCE_BLOCK_DIR=s3://avalanchego-bootstrap-testing/cchain-mainnet-blocks-1m-ldb.zip"
                echo "CURRENT_STATE_DIR=s3://avalanchego-bootstrap-testing/cchain-current-state-hashdb-full-100.zip"
              } >> "$GITHUB_ENV"
            elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
              {
                echo "START_BLOCK=101"
                echo "END_BLOCK=100000"
                echo "SOURCE_BLOCK_DIR=s3://avalanchego-bootstrap-testing/cchain-mainnet-blocks-1m-ldb.zip"
                echo "CURRENT_STATE_DIR=s3://avalanchego-bootstrap-testing/cchain-current-state-hashdb-full-100.zip"
              } >> "$GITHUB_ENV"
            else
              {
                echo "START_BLOCK=${{ github.event.inputs.start-block }}"
                echo "END_BLOCK=${{ github.event.inputs.end-block }}"
                echo "SOURCE_BLOCK_DIR=${{ github.event.inputs.source-block-dir }}"
                echo "CURRENT_STATE_DIR=${{ github.event.inputs.current-state-dir }}"
              } >> "$GITHUB_ENV"
            fi
        - uses: actions/checkout@v4
        - uses: ./.github/actions/setup-go-for-project
        - name: Run C-Chain Re-Execution
          uses: ./.github/actions/run-monitored-tmpnet-cmd
          with:
            run: ./scripts/run_task.sh reexecute-cchain-range-with-copied-data EXECUTION_DATA_DIR=${{ github.workspace }}/reexecution-data BENCHMARK_OUTPUT_FILE=${{ github.workspace }}/reexecute-cchain-range-benchmark-res.txt
            prometheus_username: ${{ secrets.PROMETHEUS_ID || '' }}
            prometheus_password: ${{ secrets.PROMETHEUS_PASSWORD || '' }}
            grafana_dashboard_id: 'Gl1I20mnk/c-chain'
            loki_username: ${{ secrets.LOKI_ID || '' }}
            loki_password: ${{ secrets.LOKI_PASSWORD || '' }}
            runtime: "" # Set runtime input to empty string to disable log collection
        - name: Download Previous Benchmark Result
          uses: actions/cache@v4
          with:
            path: ./cache
            key: ${{ runner.os }}-reexecute-cchain-range-benchmark.json
        - name: Compare Benchmark Result
          uses: benchmark-action/github-action-benchmark@v1
          with:
            tool: 'go'
            output-file-path: ${{ github.workspace }}/reexecute-cchain-range-benchmark-res.txt
            external-data-json-path: ./cache/${{ runner.os }}-reexecute-cchain-range-benchmark.json
            fail-on-alert: true
            github-token: ${{ secrets.GITHUB_TOKEN }}
            summary-always: true
            comment-on-alert: true
            auto-push: false
        - name: Push Benchmark Result
          if: github.event_name == 'schedule'
          uses: benchmark-action/github-action-benchmark@v1
          with:
            tool: 'go'
            output-file-path: ${{ github.workspace }}/reexecute-cchain-range-benchmark-res.txt
            github-token: ${{ secrets.GITHUB_TOKEN }}
            auto-push: true
