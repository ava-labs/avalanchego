name: 'C-Chain Re-Execution Benchmark'
description: 'Run C-Chain re-execution benchmark'

inputs:
  start-block:
    description: 'The start block for the benchmark.'
    default: '101'
  end-block:
    description: 'The end block for the benchmark.'
    default: '250000'
  source-block-dir:
    description: 'The source block directory. Supports S3 directory/zip and local directories.'
    default: 's3://avalanchego-bootstrap-testing/cchain-mainnet-blocks-1m-ldb.zip'
  current-state-dir:
    description: 'The current state directory. Supports S3 directory/zip and local directories.'
    default: 's3://avalanchego-bootstrap-testing/cchain-current-state-hashdb-full-100.zip'
  aws-role:
    description: 'AWS role to assume for S3 access.'
    required: true
  aws-region:
    description: 'AWS region to use for S3 access.'
    required: true
  prometheus-username:
    description: 'The username for the Prometheus instance.'
    required: true
    default: ''
  prometheus-password:
    description: 'The password for the Prometheus instance.'
    required: true
    default: ''
  external-data-json-cache-key:
    description: 'Cache key for the external data JSON file provided for comparison to GitHub Action Benchmark.'
    required: true
    default: 'c-chain-reexecution-benchmark-data.json'
  workspace:
    description: 'Working directory to use for the benchmark.'
    required: true
    default: ${{ github.workspace }}
  github-token:
    description: 'GitHub token provided to GitHub Action Benchmark.'
    required: true
  push-github-action-benchmark:
    description: 'Whether to push the benchmark result to GitHub.'
    required: true
    default: false

runs:
  using: composite
  steps:
    - uses: ./.github/actions/setup-go-for-project
    - name: Set task env
      shell: bash
      run: |
        {
          echo "EXECUTION_DATA_DIR=${{ inputs.workspace }}/reexecution-data"
          echo "BENCHMARK_OUTPUT_FILE=${{ inputs.workspace }}/reexecute-cchain-range-benchmark-res.txt"
          echo "START_BLOCK=${{ inputs.start-block }}"
          echo "END_BLOCK=${{ inputs.end-block }}"
          echo "SOURCE_BLOCK_DIR=${{ inputs.source-block-dir }}"
          echo "CURRENT_STATE_DIR=${{ inputs.current-state-dir }}"
        } >> $GITHUB_ENV
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role }}
        aws-region: ${{ inputs.aws-region }}
    - name: Run C-Chain Re-Execution
      uses: ./.github/actions/run-monitored-tmpnet-cmd
      with:
        run: ./scripts/run_task.sh reexecute-cchain-range-with-copied-data
        prometheus_push_url: ${{ inputs.prometheus-push-url }}
        prometheus_username: ${{ inputs.prometheus-username }}
        prometheus_password: ${{ inputs.prometheus-password }}
        grafana_dashboard_id: 'Gl1I20mnk/c-chain'
        runtime: "" # Set runtime input to empty string to disable log collection

    - name: Download Previous Benchmark Result
      uses: actions/cache@v4
      with:
        path: ./tmp
        key: ${{ inputs.external-data-json-cache-key }}

    - name: Compare Benchmark Result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'go'
        output-file-path: ${{ env.BENCHMARK_OUTPUT_FILE }}
        external-data-json-path: ./tmp/${{ inputs.external-data-json-cache-key }}
        fail-on-alert: true
        github-token: ${{ inputs.github-token }}
        summary-always: true
        comment-on-alert: true
        auto-push: false

    - name: Push Benchmark Result
      if: ${{ inputs.push-github-action-benchmark }}
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'go'
        output-file-path: ${{ env.BENCHMARK_OUTPUT_FILE }}
        github-token: ${{ inputs.github-token }}
        auto-push: ${{ inputs.push-github-action-benchmark }}
