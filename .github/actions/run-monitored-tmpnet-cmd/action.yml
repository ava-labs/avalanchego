name: 'Run the provided command in an environment configured to monitor tmpnet networks'
description: 'Run the provided command in an environment configured to monitor tmpnet networks'

inputs:
  run:
    description: "the bash script to run e.g. ./scripts/my-script.sh"
    required: true
  run_env:
    description: 'a string containing env vars for the command e.g. "MY_VAR1=foo MY_VAR2=bar"'
    default: ''
  filter_by_owner:
    default: ''
  artifact_prefix:
    default: ''
  prometheus_username:
    required: true
  prometheus_password:
    required: true
  loki_username:
    required: true
  loki_password:
    required: true
  # The following inputs need never be provided by the caller. They
  # default to context values that the action's steps are unable to
  # access directly.
  repository_owner:
    default: ${{ github.repository_owner }}
  repository_name:
    default: ${{ github.event.repository.name }}
  workflow:
    default: ${{ github.workflow }}
  run_id:
    default: ${{ github.run_id }}
  run_number:
    default: ${{ github.run_number }}
  run_attempt:
    default: ${{ github.run_attempt }}
  job:
    default: ${{ github.job }}

runs:
  using: composite
  steps:
    # Ensure promtail and prometheus are available
    - name: Install nix
      uses: ./.github/actions/install-nix
    - name: Start prometheus
      # Only run for the original repo; a forked repo won't have access to the monitoring credentials
      if: (inputs.prometheus_username != '')
      shell: bash
      # Assumes calling project has a nix flake that ensures a compatible prometheus
      run: nix develop --impure --command bash -x ./scripts/run_prometheus.sh
      env:
        PROMETHEUS_USERNAME: ${{ inputs.prometheus_username }}
        PROMETHEUS_PASSWORD: ${{ inputs.prometheus_password }}
    - name: Start promtail
      if: (inputs.prometheus_username != '')
      shell: bash
      # Assumes calling project has a nix flake that ensures a compatible promtail
      run: nix develop --impure --command bash -x ./scripts/run_promtail.sh
      env:
        LOKI_USERNAME: ${{ inputs.loki_username }}
        LOKI_PASSWORD: ${{ inputs.loki_password }}
    - name: Notify of metrics availability
      if: (inputs.prometheus_username != '')
      shell: bash
      run: ${{ github.action_path }}/notify-metrics-availability.sh
      env:
        GRAFANA_URL: https://grafana-poc.avax-dev.network/d/kBQpRdWnk/avalanche-main-dashboard?orgId=1&refresh=10s&var-filter=is_ephemeral_node%7C%3D%7Cfalse&var-filter=gh_repo%7C%3D%7C${{ inputs.repository_owner }}%2F${{ inputs.repository_name }}&var-filter=gh_run_id%7C%3D%7C${{ inputs.run_id }}&var-filter=gh_run_attempt%7C%3D%7C${{ inputs.run_attempt }}
        GH_JOB_ID: ${{ inputs.job }}
        FILTER_BY_OWNER: ${{ inputs.filter_by_owner }}
    - name: Run command
      shell: bash
      run: ${{ inputs.run_env }} ${{ inputs.run }}
      env:
        TMPNET_DELAY_NETWORK_SHUTDOWN: true # Ensure shutdown waits for a final metrics scrape
        GH_REPO: ${{ inputs.repository_owner }}/${{ inputs.repository_name }}
        GH_WORKFLOW: ${{ inputs.workflow }}
        GH_RUN_ID: ${{ inputs.run_id }}
        GH_RUN_NUMBER: ${{ inputs.run_number }}
        GH_RUN_ATTEMPT: ${{ inputs.run_attempt }}
        GH_JOB_ID: ${{ inputs.job }}
    - name: Upload tmpnet network dir
      uses: ./.github/actions/upload-tmpnet-artifact
      if: always()
      with:
        name: ${{ inputs.artifact_prefix }}-tmpnet-data
