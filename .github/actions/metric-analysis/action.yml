name: Metric Analysis
description: Analyze Prometheus metrics

inputs:
  baseline_count:
    description: 'Number of baseline runs to find'
    default: '3'
  monitoring_period:
    description: 'Monitoring period in seconds'
    default: '900'
  query:
    description: 'Prometheus query'
    required: true
  metric_name:
    description: 'Metric name for display'
    required: true
  x_axis_label:
    description: 'X-axis label'
    default: 'Time'
  y_axis_label:
    description: 'Y-axis label'
    default: ''
  workflow:
    description: 'Workflow to search for baselines. Can be filename (ci.yml, c-chain-reexecution-benchmark.yml...) or a workflow name. Enables cross-workflow baseline comparison.'
    default: 'ci.yml'
  job_name:
    description: 'Job name to search for baselines. Uses current job if not specified.'
    default: ''
  prometheus_url:
    description: 'Prometheus server URL'
    default: 'https://prometheus-poc.avax-dev.network'
  prometheus_username:
    required: true
  prometheus_password:
    required: true
  step_size:
    description: 'Prometheus query step size'
    default: '15s'
  timezone:
    description: 'Display timezone'
    default: 'US/Eastern'
  github_token:
    description: 'GitHub token'
    default: ${{ github.token }}

outputs:
  visualization_url:
    description: 'URL to the generated visualization artifact'
    value: ${{ steps.upload-viz.outputs.artifact-url }}
  baselines_found:
    description: 'Number of baseline runs found'
    value: ${{ steps.build-config.outputs.baselines_found }}

runs:
  using: composite
  steps:
    - name: Build baseline configuration
      id: build-config
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const buildConfig = require('./build-config.js');
          const result = await buildConfig({
            inputs: {
              query: '${{ inputs.query }}',
              metric_name: '${{ inputs.metric_name }}',
              x_axis_label: '${{ inputs.x_axis_label }}',
              y_axis_label: '${{ inputs.y_axis_label }}',
              baseline_count: '${{ inputs.baseline_count }}',
              workflow: '${{ inputs.workflow }}'
            },
            github,
            context,
            core,
            actionPath: process.env.GITHUB_ACTION_PATH
          });
          core.setOutput('baselines_found', result.baselines_found.toString());
          core.setOutput('config_path', result.config_path);
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    - name: Install Python dependencies
      shell: bash
      run: pip install -r $GITHUB_ACTION_PATH/requirements.txt
    - name: Plot
      shell: bash
      env:
        PROMETHEUS_ID: ${{ inputs.prometheus_username }}
        PROMETHEUS_PASSWORD: ${{ inputs.prometheus_password }}
      run: |
        python $GITHUB_ACTION_PATH/plot.py \
          --config ${{ steps.build-config.outputs.config_path }} \
          --prometheus-url "${{ inputs.prometheus_url }}" \
          --step-size "${{ inputs.step_size }}" \
          --timezone "${{ inputs.timezone }}"
    - name: Upload visualization artifact
      id: upload-viz
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: metric-comparison-${{ github.run_id }}
        path: |
          metric_visualization_*.html
          metric_config.json
        retention-days: 14
