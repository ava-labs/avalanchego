#!/usr/bin/env bash

set -euo pipefail

if ! [[ "$0" =~ scripts/mock.gen.sh ]]; then
  echo "must be run from repository root"
  exit 255
fi

# https://github.com/uber-go/mock
go install -v go.uber.org/mock/mockgen@v0.4.0

grep -lr -E '^// Code generated by MockGen\. DO NOT EDIT\.$' . | \
  # Embedded verify.IsState
  grep -v 'vms/components/avax/avaxmock/transferable_out.go' | \
  # Embedded verify.IsNotState
  grep -v 'vms/platformvm/fx/fxmock/owner.go' | \
  xargs -r rm

# tuples of (source import path, comma-separated interface names, output file path)
input="scripts/mocks.mockgen.txt"
while IFS= read -r line
do
  IFS='=' read -r src_import_path interface_name output_path <<< "${line}"
  package_name="$(basename "$(dirname "$output_path")")"
  echo "Generating ${output_path}..."
  mockgen -package="${package_name}" -destination="${output_path}" -mock_names="${interface_name}=${interface_name}" "${src_import_path}" "${interface_name}"

done < "$input"

# tuples of (source import path, comma-separated interface names to exclude, interface name, output file path)
input="scripts/mocks.mockgen.source.txt"
while IFS= read -r line
do
  IFS='=' read -r source_path exclude_interfaces interface_name output_path <<< "${line}"
  package_name=$(basename "$(dirname "$output_path")")
  echo "Generating ${output_path}..."

  mockgen \
    -source="${source_path}" \
    -destination="${output_path}" \
    -package="${package_name}" \
    -exclude_interfaces="${exclude_interfaces}" \
    -mock_names="${interface_name}=${interface_name}"

done < "$input"

git diff --exit-code

echo "SUCCESS"
