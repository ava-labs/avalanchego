// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: warp/message.proto

package warp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     uint32                 `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	SourceChainId []byte                 `protobuf:"bytes,2,opt,name=source_chain_id,json=sourceChainId,proto3" json:"source_chain_id,omitempty"`
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	mi := &file_warp_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warp_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_warp_message_proto_rawDescGZIP(), []int{0}
}

func (x *SignRequest) GetNetworkId() uint32 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *SignRequest) GetSourceChainId() []byte {
	if x != nil {
		return x.SourceChainId
	}
	return nil
}

func (x *SignRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type SignResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     []byte                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignResponse) Reset() {
	*x = SignResponse{}
	mi := &file_warp_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResponse) ProtoMessage() {}

func (x *SignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warp_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResponse.ProtoReflect.Descriptor instead.
func (*SignResponse) Descriptor() ([]byte, []int) {
	return file_warp_message_proto_rawDescGZIP(), []int{1}
}

func (x *SignResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_warp_message_proto protoreflect.FileDescriptor

const file_warp_message_proto_rawDesc = "" +
	"\n" +
	"\x12warp/message.proto\x12\x04warp\"n\n" +
	"\vSignRequest\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\rR\tnetworkId\x12&\n" +
	"\x0fsource_chain_id\x18\x02 \x01(\fR\rsourceChainId\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\",\n" +
	"\fSignResponse\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature27\n" +
	"\x06Signer\x12-\n" +
	"\x04Sign\x12\x11.warp.SignRequest\x1a\x12.warp.SignResponseB/Z-github.com/ava-labs/avalanchego/proto/pb/warpb\x06proto3"

var (
	file_warp_message_proto_rawDescOnce sync.Once
	file_warp_message_proto_rawDescData []byte
)

func file_warp_message_proto_rawDescGZIP() []byte {
	file_warp_message_proto_rawDescOnce.Do(func() {
		file_warp_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_warp_message_proto_rawDesc), len(file_warp_message_proto_rawDesc)))
	})
	return file_warp_message_proto_rawDescData
}

var file_warp_message_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_warp_message_proto_goTypes = []any{
	(*SignRequest)(nil),  // 0: warp.SignRequest
	(*SignResponse)(nil), // 1: warp.SignResponse
}
var file_warp_message_proto_depIdxs = []int32{
	0, // 0: warp.Signer.Sign:input_type -> warp.SignRequest
	1, // 1: warp.Signer.Sign:output_type -> warp.SignResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_warp_message_proto_init() }
func file_warp_message_proto_init() {
	if File_warp_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_warp_message_proto_rawDesc), len(file_warp_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_warp_message_proto_goTypes,
		DependencyIndexes: file_warp_message_proto_depIdxs,
		MessageInfos:      file_warp_message_proto_msgTypes,
	}.Build()
	File_warp_message_proto = out.File
	file_warp_message_proto_goTypes = nil
	file_warp_message_proto_depIdxs = nil
}
