// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ava-labs/avalanchego/wallet/subnet/primary/common (interfaces: ChainUTXOs)
//
// Generated by this command:
//
//	mockgen -package=common -destination=wallet/subnet/primary/common/mock_chain_utxos.go github.com/ava-labs/avalanchego/wallet/subnet/primary/common ChainUTXOs
//

// Package common is a generated GoMock package.
package common

import (
	context "context"
	reflect "reflect"

	ids "github.com/ava-labs/avalanchego/ids"
	avax "github.com/ava-labs/avalanchego/vms/components/avax"
	gomock "go.uber.org/mock/gomock"
)

// MockChainUTXOs is a mock of ChainUTXOs interface.
type MockChainUTXOs struct {
	ctrl     *gomock.Controller
	recorder *MockChainUTXOsMockRecorder
}

// MockChainUTXOsMockRecorder is the mock recorder for MockChainUTXOs.
type MockChainUTXOsMockRecorder struct {
	mock *MockChainUTXOs
}

// NewMockChainUTXOs creates a new mock instance.
func NewMockChainUTXOs(ctrl *gomock.Controller) *MockChainUTXOs {
	mock := &MockChainUTXOs{ctrl: ctrl}
	mock.recorder = &MockChainUTXOsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChainUTXOs) EXPECT() *MockChainUTXOsMockRecorder {
	return m.recorder
}

// AddUTXO mocks base method.
func (m *MockChainUTXOs) AddUTXO(arg0 context.Context, arg1 ids.ID, arg2 *avax.UTXO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUTXO", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddUTXO indicates an expected call of AddUTXO.
func (mr *MockChainUTXOsMockRecorder) AddUTXO(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUTXO", reflect.TypeOf((*MockChainUTXOs)(nil).AddUTXO), arg0, arg1, arg2)
}

// GetUTXO mocks base method.
func (m *MockChainUTXOs) GetUTXO(arg0 context.Context, arg1, arg2 ids.ID) (*avax.UTXO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUTXO", arg0, arg1, arg2)
	ret0, _ := ret[0].(*avax.UTXO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUTXO indicates an expected call of GetUTXO.
func (mr *MockChainUTXOsMockRecorder) GetUTXO(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUTXO", reflect.TypeOf((*MockChainUTXOs)(nil).GetUTXO), arg0, arg1, arg2)
}

// RemoveUTXO mocks base method.
func (m *MockChainUTXOs) RemoveUTXO(arg0 context.Context, arg1, arg2 ids.ID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveUTXO", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveUTXO indicates an expected call of RemoveUTXO.
func (mr *MockChainUTXOsMockRecorder) RemoveUTXO(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveUTXO", reflect.TypeOf((*MockChainUTXOs)(nil).RemoveUTXO), arg0, arg1, arg2)
}

// UTXOs mocks base method.
func (m *MockChainUTXOs) UTXOs(arg0 context.Context, arg1 ids.ID) ([]*avax.UTXO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UTXOs", arg0, arg1)
	ret0, _ := ret[0].([]*avax.UTXO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UTXOs indicates an expected call of UTXOs.
func (mr *MockChainUTXOsMockRecorder) UTXOs(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UTXOs", reflect.TypeOf((*MockChainUTXOs)(nil).UTXOs), arg0, arg1)
}
