// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ava-labs/avalanchego/utils/hashing (interfaces: Hasher)
//
// Generated by this command:
//
//	mockgen -package=hashingmock -destination=utils/hashing/hashingmock/hasher.go -mock_names=Hasher=Hasher github.com/ava-labs/avalanchego/utils/hashing Hasher
//

// Package hashingmock is a generated GoMock package.
package hashingmock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// Hasher is a mock of Hasher interface.
type Hasher struct {
	ctrl     *gomock.Controller
	recorder *HasherMockRecorder
}

// HasherMockRecorder is the mock recorder for Hasher.
type HasherMockRecorder struct {
	mock *Hasher
}

// NewHasher creates a new mock instance.
func NewHasher(ctrl *gomock.Controller) *Hasher {
	mock := &Hasher{ctrl: ctrl}
	mock.recorder = &HasherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Hasher) EXPECT() *HasherMockRecorder {
	return m.recorder
}

// Hash mocks base method.
func (m *Hasher) Hash(arg0 []byte) uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hash", arg0)
	ret0, _ := ret[0].(uint64)
	return ret0
}

// Hash indicates an expected call of Hash.
func (mr *HasherMockRecorder) Hash(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hash", reflect.TypeOf((*Hasher)(nil).Hash), arg0)
}
