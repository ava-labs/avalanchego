load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "peer",
    srcs = [
        "config.go",
        "info.go",
        "ip.go",
        "ip_signer.go",
        "message_queue.go",
        "metrics.go",
        "msg_length.go",
        "network.go",
        "peer.go",
        "set.go",
        "test_network.go",
        "test_peer.go",
        "tls_config.go",
        "upgrader.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/network/peer",
    visibility = ["//visibility:public"],
    deps = [
        "//ids",
        "//message",
        "//network/throttling",
        "//proto/pb/p2p",
        "//snow/networking/router",
        "//snow/networking/tracker",
        "//snow/uptime",
        "//snow/validators",
        "//staking",
        "//upgrade",
        "//utils",
        "//utils/bloom",
        "//utils/buffer",
        "//utils/constants",
        "//utils/crypto/bls",
        "//utils/crypto/bls/signer/localsigner",
        "//utils/hashing",
        "//utils/ips",
        "//utils/json",
        "//utils/logging",
        "//utils/math/meter",
        "//utils/resource",
        "//utils/sampler",
        "//utils/set",
        "//utils/timer/mockable",
        "//utils/wrappers",
        "//version",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "peer_test",
    srcs = [
        "example_test.go",
        "ip_signer_test.go",
        "ip_test.go",
        "message_queue_test.go",
        "msg_length_test.go",
        "peer_test.go",
        "set_test.go",
        "tls_config_test.go",
        "upgrader_test.go",
    ],
    embed = [":peer"],
    embedsrcs = ["8192RSA_test.pem"],
    deps = [
        "//ids",
        "//message",
        "//network/throttling",
        "//snow/networking/router",
        "//snow/networking/tracker",
        "//snow/uptime",
        "//snow/validators",
        "//staking",
        "//upgrade",
        "//utils",
        "//utils/constants",
        "//utils/crypto/bls",
        "//utils/crypto/bls/signer/localsigner",
        "//utils/logging",
        "//utils/math/meter",
        "//utils/resource",
        "//utils/set",
        "//version",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_crypto//ed25519",
    ],
)
