load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "throttling",
    srcs = [
        "bandwidth_throttler.go",
        "common.go",
        "dial_throttler.go",
        "inbound_conn_throttler.go",
        "inbound_conn_upgrade_throttler.go",
        "inbound_msg_buffer_throttler.go",
        "inbound_msg_byte_throttler.go",
        "inbound_msg_throttler.go",
        "inbound_resource_throttler.go",
        "no_inbound_msg_throttler.go",
        "outbound_msg_throttler.go",
        "release_func.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/network/throttling",
    visibility = ["//visibility:public"],
    deps = [
        "//ids",
        "//message",
        "//snow/networking/tracker",
        "//snow/validators",
        "//utils/constants",
        "//utils/linked",
        "//utils/logging",
        "//utils/metric",
        "//utils/set",
        "//utils/timer",
        "//utils/timer/mockable",
        "//utils/wrappers",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_golang_x_time//rate",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "throttling_test",
    srcs = [
        "bandwidth_throttler_test.go",
        "dial_throttler_test.go",
        "inbound_conn_throttler_test.go",
        "inbound_conn_upgrade_throttler_test.go",
        "inbound_msg_buffer_throttler_test.go",
        "inbound_msg_byte_throttler_test.go",
        "inbound_resource_throttler_test.go",
        "outbound_msg_throttler_test.go",
    ],
    embed = [":throttling"],
    deps = [
        "//ids",
        "//message",
        "//message/messagemock",
        "//snow/networking/tracker",
        "//snow/networking/tracker/trackermock",
        "//snow/validators",
        "//utils/constants",
        "//utils/logging",
        "//utils/math/meter",
        "//utils/resource",
        "//utils/timer/mockable",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_mock//gomock",
    ],
)
