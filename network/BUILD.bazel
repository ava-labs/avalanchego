load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "network",
    srcs = [
        "config.go",
        "ip_tracker.go",
        "metrics.go",
        "network.go",
        "test_network.go",
        "tracked_ip.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/network",
    visibility = ["//visibility:public"],
    deps = [
        "//api/health",
        "//genesis",
        "//ids",
        "//message",
        "//network/dialer",
        "//network/peer",
        "//network/throttling",
        "//snow/engine/common",
        "//snow/networking/router",
        "//snow/networking/sender",
        "//snow/networking/tracker",
        "//snow/uptime",
        "//snow/validators",
        "//staking",
        "//subnets",
        "//upgrade",
        "//utils",
        "//utils/bloom",
        "//utils/compression",
        "//utils/constants",
        "//utils/crypto/bls",
        "//utils/crypto/bls/signer/localsigner",
        "//utils/ips",
        "//utils/logging",
        "//utils/math",
        "//utils/math/meter",
        "//utils/resource",
        "//utils/sampler",
        "//utils/set",
        "//utils/units",
        "//utils/wrappers",
        "//version",
        "@com_github_pires_go_proxyproto//:go-proxyproto",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "network_test",
    srcs = [
        "conn_test.go",
        "dialer_test.go",
        "example_test.go",
        "handler_test.go",
        "ip_tracker_test.go",
        "listener_test.go",
        "network_test.go",
        "tracked_ip_test.go",
    ],
    embed = [":network"],
    deps = [
        "//genesis",
        "//ids",
        "//message",
        "//network/dialer",
        "//network/peer",
        "//network/throttling",
        "//snow/engine/common",
        "//snow/networking/router",
        "//snow/networking/tracker",
        "//snow/uptime",
        "//snow/validators",
        "//staking",
        "//subnets",
        "//upgrade",
        "//utils",
        "//utils/bloom",
        "//utils/constants",
        "//utils/crypto/bls/signer/localsigner",
        "//utils/ips",
        "//utils/logging",
        "//utils/math/meter",
        "//utils/resource",
        "//utils/set",
        "//utils/timer/mockable",
        "//utils/units",
        "//version",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/testutil",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_zap//:zap",
    ],
)
