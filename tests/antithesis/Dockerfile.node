# Antithesis: Getting the Antithesis golang instrumentation library
FROM docker.io/antithesishq/go-instrumentor AS instrumentor

# Changes to the minimum golang version must also be replicated in
# tests/antithesis/Dockerfile.node (here)
# tests/antithesis/Dockerfile.workload
# Dockerfile
# README.md
# go.mod
# ============= Compilation Stage ================
FROM golang:1.21.9-bullseye AS builder

WORKDIR /build
# Copy and download avalanche dependencies using go mod
COPY go.mod .
COPY go.sum .
RUN go mod download

# Copy the code into the container
COPY . .

# Keep the commit hash to easily verify the exact version that is running
RUN git rev-parse HEAD > ./commit_hash.txt

# Copy the instrumentor and supporting files to their correct locations
COPY --from=instrumentor /opt/antithesis /opt/antithesis
COPY --from=instrumentor /opt/antithesis/lib /lib

# Create the destination output directory for the instrumented code
RUN mkdir -p /avalanchego_instrumented

# Park the .git file in a safe location
RUN mkdir -p /opt/tmp/ 
RUN cp -r .git /opt/tmp/

# Instrument avalanchego
RUN /opt/antithesis/bin/goinstrumentor \
    -stderrthreshold=INFO \
    -antithesis /opt/antithesis/instrumentation \
    . \
    /avalanchego_instrumented

WORKDIR /avalanchego_instrumented/customer
RUN go mod download
RUN ln -s /opt/tmp/.git .git

# Build avalanchego with race detection (-r) enabled.
RUN ./scripts/build.sh -r

# ============= Cleanup Stage ================
FROM debian:11-slim AS execution

# Copy identifying information into the container
COPY --from=builder /build/commit_hash.txt ./commit_hash.txt

# Copy the antithesis dependencies into the container
RUN mkdir -p /symbols
COPY --from=builder /avalanchego_instrumented/symbols /symbols
COPY --from=builder /opt/antithesis/lib/libvoidstar.so /usr/lib/libvoidstar.so

# Copy the executable into the container
COPY --from=builder /avalanchego_instrumented/customer/build/avalanchego ./avalanchego

CMD [ "./avalanchego" ]
