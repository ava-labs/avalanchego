load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "secp256k1fx",
    srcs = [
        "credential.go",
        "factory.go",
        "fx.go",
        "input.go",
        "keychain.go",
        "mint_operation.go",
        "mint_output.go",
        "output_owners.go",
        "transfer_input.go",
        "transfer_output.go",
        "tx.go",
        "vm.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/vms/secp256k1fx",
    visibility = ["//visibility:public"],
    deps = [
        "//cache",
        "//codec",
        "//ids",
        "//snow",
        "//utils",
        "//utils/constants",
        "//utils/crypto/keychain",
        "//utils/crypto/secp256k1",
        "//utils/formatting",
        "//utils/formatting/address",
        "//utils/hashing",
        "//utils/logging",
        "//utils/math",
        "//utils/set",
        "//utils/timer/mockable",
        "//vms/components/verify",
        "//vms/fx",
        "@com_github_ethereum_go_ethereum//common",
    ],
)

go_test(
    name = "secp256k1fx_test",
    srcs = [
        "credential_test.go",
        "factory_test.go",
        "fx_test.go",
        "input_test.go",
        "keychain_test.go",
        "mint_operation_test.go",
        "mint_output_test.go",
        "output_owners_test.go",
        "transfer_input_test.go",
        "transfer_output_test.go",
    ],
    embed = [":secp256k1fx"],
    deps = [
        "//codec",
        "//codec/linearcodec",
        "//ids",
        "//utils/cb58",
        "//utils/crypto/secp256k1",
        "//utils/formatting",
        "//utils/logging",
        "//vms/components/verify",
        "@com_github_stretchr_testify//require",
    ],
)
