syntax = "proto3";
package vmproto;
option go_package = "github.com/ava-labs/avalanchego/vms/rpcchainvm/vmproto";
import "google/protobuf/empty.proto";

// import from https://github.com/prometheus/client_model/blob/master/io/prometheus/client/metrics.proto
// requires "github.com/prometheus/client_model" for reuse in Go code
// requires "io/prometheus/client/metrics.proto" file in "protoc --proto_path" commands
//
// if vended after https://github.com/prometheus/client_model/commit/147c58e9608a4f9628b53b6cc863325ca746f63a
// import "io/prometheus/client/metrics.proto";

// for older vendored prometheus
import "metrics.proto";

// To compile: protoc --go_out=plugins=grpc:. vm.proto
// Or run "scripts/protobuf_codegen.sh"

message InitializeRequest {
    uint32 networkID = 1;
    bytes subnetID = 2;
    bytes chainID = 3;
    bytes nodeID = 4;
    bytes xChainID = 5;
    bytes avaxAssetID = 6;
    bytes genesisBytes = 7;
    bytes upgradeBytes = 8;
    bytes configBytes = 9;

    repeated VersionedDBServer dbServers = 10;
    uint32 engineServer = 11;
    uint32 keystoreServer = 12;
    uint32 sharedMemoryServer = 13;
    uint32 bcLookupServer = 14;
    uint32 snLookupServer = 15;
    uint32 appSenderServer = 16;
}

message InitializeResponse {
    bytes lastAcceptedID = 1;
    bytes lastAcceptedParentID = 2;
    uint32 status = 3;
    uint64 height = 4;
    bytes bytes = 5;
    bytes timestamp = 6;
}

message VersionedDBServer {
    uint32 dbServer = 1;
    string version = 2;
}

message CreateHandlersResponse {
    repeated Handler handlers = 1;
}

message CreateStaticHandlersResponse {
    repeated Handler handlers = 1;
}

message Handler {
    string prefix = 1;
    uint32 lockOptions = 2;
    uint32 server = 3;
}

message BuildBlockResponse {
    bytes id = 1;
    bytes parentID = 2;
    bytes bytes = 3;
    uint64 height = 4;
    bytes timestamp = 5;
    // status is always processing
}

message ParseBlockRequest {
    bytes bytes = 1;
}

message ParseBlockResponse {
    bytes id = 1;
    bytes parentID = 2;
    uint32 status = 3;
    uint64 height = 4;
    bytes timestamp = 5;
}

message GetBlockRequest {
    bytes id = 1;
}

message GetBlockResponse {
    bytes parentID = 1;
    bytes bytes = 2;
    uint32 status = 3;
    uint64 height = 4;
    bytes timestamp = 5;
}

message SetPreferenceRequest {
    bytes id = 1;
}

message BlockVerifyRequest {
    bytes bytes = 1;
}

message BlockVerifyResponse {
    bytes timestamp = 1;
}

message BlockAcceptRequest {
    bytes id = 1;
}

message BlockRejectRequest {
    bytes id = 1;
}

message HealthResponse {
    string details = 1;
}

message VersionResponse {
    string version = 1;
}

message AppRequestMsg {
    // The node that sent us this request
    bytes nodeID = 1;
    // The ID of this request
    uint32 requestID = 2;
    // deadline for this request
    bytes deadline = 3;
    // The request body
    bytes request = 4;
}

message AppRequestFailedMsg {
    // The node that we failed to get a response from
    bytes nodeID = 1;
    // The ID of the request we sent and didn't get a response to
    uint32 requestID = 2;
}

message AppResponseMsg {
    // The node that we got a response from
    bytes nodeID = 1;
    // Request ID of request that this is in response to
    uint32 requestID = 2;
    // The response body
    bytes response = 3;
}

message AppGossipMsg {
    // The node that sent us a gossip message
    bytes nodeID = 1;
    // The message body
    bytes msg = 2;
}

message ConnectedRequest {
    bytes nodeID = 1; 
}
 
message DisconnectedRequest {
    bytes nodeID = 1; 
}

message GetAncestorsRequest {
    bytes blkID = 1;
    int32 maxBlocksNum = 2;
    int32 maxBlocksSize = 3;
    int64 maxBlocksRetrivalTime = 4;
}

message GetAncestorsResponse {
    repeated bytes blksBytes = 1;
}

message BatchedParseBlockRequest {
    repeated bytes request = 1;
}

message BatchedParseBlockResponse {
    repeated ParseBlockResponse response = 1;
}

message GatherResponse {
    repeated io.prometheus.client.MetricFamily metricFamilies = 1;
}

service VM {
    rpc Initialize(InitializeRequest) returns (InitializeResponse);
    rpc Bootstrapping(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc Bootstrapped(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc Shutdown(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc CreateHandlers(google.protobuf.Empty) returns (CreateHandlersResponse);
    rpc CreateStaticHandlers(google.protobuf.Empty) returns (CreateStaticHandlersResponse);
    rpc Connected(ConnectedRequest) returns (google.protobuf.Empty);
    rpc Disconnected(DisconnectedRequest) returns (google.protobuf.Empty);
    rpc BuildBlock(google.protobuf.Empty) returns (BuildBlockResponse);
    rpc ParseBlock(ParseBlockRequest) returns (ParseBlockResponse);
    rpc GetBlock(GetBlockRequest) returns (GetBlockResponse);
    rpc SetPreference(SetPreferenceRequest) returns (google.protobuf.Empty);
    rpc Health(google.protobuf.Empty) returns (HealthResponse);
    rpc Version(google.protobuf.Empty) returns (VersionResponse);
    rpc AppRequest(AppRequestMsg) returns (google.protobuf.Empty);
    rpc AppRequestFailed(AppRequestFailedMsg) returns (google.protobuf.Empty);
    rpc AppResponse(AppResponseMsg) returns (google.protobuf.Empty);
    rpc AppGossip(AppGossipMsg) returns (google.protobuf.Empty);

    rpc Gather(google.protobuf.Empty) returns (GatherResponse);

    rpc BlockVerify(BlockVerifyRequest) returns (BlockVerifyResponse);
    rpc BlockAccept(BlockAcceptRequest) returns (google.protobuf.Empty);
    rpc BlockReject(BlockRejectRequest) returns (google.protobuf.Empty);

    rpc GetAncestors(GetAncestorsRequest) returns (GetAncestorsResponse);
    rpc BatchedParseBlock(BatchedParseBlockRequest) returns (BatchedParseBlockResponse);
}
