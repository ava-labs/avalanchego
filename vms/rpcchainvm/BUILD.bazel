load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "rpcchainvm",
    srcs = [
        "errors.go",
        "factory.go",
        "vm.go",
        "vm_client.go",
        "vm_server.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/vms/rpcchainvm",
    visibility = ["//visibility:public"],
    deps = [
        "//api/metrics",
        "//chains/atomic/gsharedmemory",
        "//database",
        "//database/corruptabledb",
        "//database/rpcdb",
        "//ids",
        "//ids/galiasreader",
        "//proto/pb/aliasreader",
        "//proto/pb/appsender",
        "//proto/pb/http",
        "//proto/pb/messenger",
        "//proto/pb/rpcdb",
        "//proto/pb/sharedmemory",
        "//proto/pb/validatorstate",
        "//proto/pb/vm",
        "//proto/pb/vm/runtime",
        "//proto/pb/warp",
        "//snow",
        "//snow/consensus/snowman",
        "//snow/engine/common",
        "//snow/engine/common/appsender",
        "//snow/engine/snowman/block",
        "//snow/validators/gvalidators",
        "//upgrade",
        "//utils",
        "//utils/crypto/bls",
        "//utils/logging",
        "//utils/resource",
        "//utils/units",
        "//utils/wrappers",
        "//version",
        "//vms",
        "//vms/components/chain",
        "//vms/platformvm/warp/gwarp",
        "//vms/rpcchainvm/ghttp",
        "//vms/rpcchainvm/grpcutils",
        "//vms/rpcchainvm/gruntime",
        "//vms/rpcchainvm/messenger",
        "//vms/rpcchainvm/runtime",
        "//vms/rpcchainvm/runtime/subprocess",
        "@com_github_grpc_ecosystem_go_grpc_prometheus//:go-grpc-prometheus",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/collectors",
        "@com_github_prometheus_client_model//go",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//health",
        "@org_golang_google_grpc//health/grpc_health_v1",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "rpcchainvm_test",
    srcs = [
        "batched_vm_test.go",
        "state_syncable_vm_test.go",
        "vm_test.go",
        "with_context_vm_test.go",
    ],
    embed = [":rpcchainvm"],
    deps = [
        "//api/metrics",
        "//database/memdb",
        "//database/prefixdb",
        "//ids",
        "//proto/pb/vm",
        "//snow",
        "//snow/consensus/snowman",
        "//snow/consensus/snowman/snowmanmock",
        "//snow/consensus/snowman/snowmantest",
        "//snow/engine/snowman/block",
        "//snow/engine/snowman/block/blockmock",
        "//snow/engine/snowman/block/blocktest",
        "//snow/snowtest",
        "//utils/logging",
        "//vms/components/chain",
        "//vms/rpcchainvm/grpcutils",
        "//vms/rpcchainvm/runtime",
        "//vms/rpcchainvm/runtime/subprocess",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_mock//gomock",
    ],
)
