load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "avm",
    srcs = [
        "client.go",
        "config.go",
        "factory.go",
        "genesis.go",
        "health.go",
        "service.go",
        "static_service.go",
        "tx.go",
        "tx_init.go",
        "vm.go",
        "wallet_client.go",
        "wallet_service.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/vms/avm",
    visibility = ["//visibility:public"],
    deps = [
        "//api",
        "//api/metrics",
        "//cache",
        "//database",
        "//database/versiondb",
        "//ids",
        "//snow",
        "//snow/choices",
        "//snow/consensus/snowman",
        "//snow/consensus/snowstorm",
        "//snow/engine/avalanche/vertex",
        "//snow/engine/common",
        "//utils",
        "//utils/constants",
        "//utils/formatting",
        "//utils/formatting/address",
        "//utils/json",
        "//utils/linked",
        "//utils/logging",
        "//utils/math",
        "//utils/rpc",
        "//utils/set",
        "//utils/timer/mockable",
        "//version",
        "//vms",
        "//vms/avm/block",
        "//vms/avm/block/builder",
        "//vms/avm/block/executor",
        "//vms/avm/config",
        "//vms/avm/fxs",
        "//vms/avm/metrics",
        "//vms/avm/network",
        "//vms/avm/state",
        "//vms/avm/txs",
        "//vms/avm/txs/executor",
        "//vms/avm/txs/mempool",
        "//vms/avm/utxo",
        "//vms/components/avax",
        "//vms/components/index",
        "//vms/components/verify",
        "//vms/nftfx",
        "//vms/propertyfx",
        "//vms/secp256k1fx",
        "//vms/txs/mempool",
        "@com_github_gorilla_rpc//v2:rpc",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "avm_test",
    srcs = [
        "config_test.go",
        "environment_test.go",
        "fx_test.go",
        "genesis_test.go",
        "index_test.go",
        "service_test.go",
        "state_test.go",
        "vm_benchmark_test.go",
        "vm_regression_test.go",
        "vm_test.go",
    ],
    embed = [":avm"],
    deps = [
        "//api",
        "//chains/atomic",
        "//codec",
        "//database",
        "//database/memdb",
        "//database/prefixdb",
        "//database/versiondb",
        "//ids",
        "//snow",
        "//snow/choices",
        "//snow/engine/common",
        "//snow/engine/enginetest",
        "//snow/snowtest",
        "//upgrade/upgradetest",
        "//utils",
        "//utils/constants",
        "//utils/crypto/secp256k1",
        "//utils/formatting",
        "//utils/formatting/address",
        "//utils/json",
        "//utils/logging",
        "//utils/set",
        "//utils/units",
        "//vms/avm/block",
        "//vms/avm/block/executor",
        "//vms/avm/block/executor/executormock",
        "//vms/avm/config",
        "//vms/avm/fxs",
        "//vms/avm/network",
        "//vms/avm/state/statemock",
        "//vms/avm/txs",
        "//vms/avm/txs/txstest",
        "//vms/components/avax",
        "//vms/components/index",
        "//vms/components/verify",
        "//vms/nftfx",
        "//vms/propertyfx",
        "//vms/secp256k1fx",
        "@com_github_btcsuite_btcd_btcutil//bech32",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_mock//gomock",
    ],
)
