// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ava-labs/avalanchego/vms (interfaces: Factory)
//
// Generated by this command:
//
//	mockgen -package=vmsmock -destination=vms/vmsmock/factory.go -mock_names=Factory=Factory github.com/ava-labs/avalanchego/vms Factory
//

// Package vmsmock is a generated GoMock package.
package vmsmock

import (
	reflect "reflect"

	logging "github.com/ava-labs/avalanchego/utils/logging"
	gomock "go.uber.org/mock/gomock"
)

// Factory is a mock of Factory interface.
type Factory struct {
	ctrl     *gomock.Controller
	recorder *FactoryMockRecorder
}

// FactoryMockRecorder is the mock recorder for Factory.
type FactoryMockRecorder struct {
	mock *Factory
}

// NewFactory creates a new mock instance.
func NewFactory(ctrl *gomock.Controller) *Factory {
	mock := &Factory{ctrl: ctrl}
	mock.recorder = &FactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Factory) EXPECT() *FactoryMockRecorder {
	return m.recorder
}

// New mocks base method.
func (m *Factory) New(arg0 logging.Logger) (any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", arg0)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// New indicates an expected call of New.
func (mr *FactoryMockRecorder) New(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*Factory)(nil).New), arg0)
}
