load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "proposervm",
    srcs = [
        "batched_vm.go",
        "block.go",
        "config.go",
        "height_indexed_vm.go",
        "post_fork_block.go",
        "post_fork_option.go",
        "pre_fork_block.go",
        "state_summary.go",
        "state_syncable_vm.go",
        "vm.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/vms/proposervm",
    visibility = ["//visibility:public"],
    deps = [
        "//cache",
        "//cache/metercacher",
        "//database",
        "//database/prefixdb",
        "//database/versiondb",
        "//ids",
        "//snow",
        "//snow/consensus/snowman",
        "//snow/engine/common",
        "//snow/engine/snowman/block",
        "//staking",
        "//upgrade",
        "//utils/constants",
        "//utils/math",
        "//utils/timer/mockable",
        "//utils/units",
        "//utils/wrappers",
        "//vms/proposervm/block",
        "//vms/proposervm/proposer",
        "//vms/proposervm/scheduler",
        "//vms/proposervm/state",
        "//vms/proposervm/summary",
        "//vms/proposervm/tree",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "proposervm_test",
    srcs = [
        "batched_vm_test.go",
        "block_test.go",
        "main_test.go",
        "mocks_generate_test.go",
        "mocks_test.go",
        "post_fork_block_test.go",
        "post_fork_option_test.go",
        "pre_fork_block_test.go",
        "state_syncable_vm_test.go",
        "vm_byzantine_test.go",
        "vm_test.go",
    ],
    embed = [":proposervm"],
    deps = [
        "//database",
        "//database/memdb",
        "//database/prefixdb",
        "//ids",
        "//snow",
        "//snow/consensus/snowman",
        "//snow/consensus/snowman/snowmanmock",
        "//snow/consensus/snowman/snowmantest",
        "//snow/engine/common",
        "//snow/engine/enginetest",
        "//snow/engine/snowman/block",
        "//snow/engine/snowman/block/blockmock",
        "//snow/engine/snowman/block/blocktest",
        "//snow/snowtest",
        "//snow/validators",
        "//snow/validators/validatorsmock",
        "//snow/validators/validatorstest",
        "//staking",
        "//upgrade",
        "//upgrade/upgradetest",
        "//utils",
        "//utils/logging",
        "//utils/timer/mockable",
        "//vms/proposervm/block",
        "//vms/proposervm/proposer",
        "//vms/proposervm/proposer/proposermock",
        "//vms/proposervm/scheduler/schedulermock",
        "//vms/proposervm/summary",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/testutil",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_goleak//:goleak",
        "@org_uber_go_mock//gomock",
    ],
)
