// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ava-labs/avalanchego/vms/components/avax (interfaces: TransferableIn)
//
// Generated by this command:
//
//	mockgen -package=avaxmock -destination=vms/components/avax/avaxmock/transferable_in.go -mock_names=TransferableIn=TransferableIn github.com/ava-labs/avalanchego/vms/components/avax TransferableIn
//

// Package avaxmock is a generated GoMock package.
package avaxmock

import (
	reflect "reflect"

	snow "github.com/ava-labs/avalanchego/snow"
	gomock "go.uber.org/mock/gomock"
)

// TransferableIn is a mock of TransferableIn interface.
type TransferableIn struct {
	ctrl     *gomock.Controller
	recorder *TransferableInMockRecorder
}

// TransferableInMockRecorder is the mock recorder for TransferableIn.
type TransferableInMockRecorder struct {
	mock *TransferableIn
}

// NewTransferableIn creates a new mock instance.
func NewTransferableIn(ctrl *gomock.Controller) *TransferableIn {
	mock := &TransferableIn{ctrl: ctrl}
	mock.recorder = &TransferableInMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *TransferableIn) EXPECT() *TransferableInMockRecorder {
	return m.recorder
}

// Amount mocks base method.
func (m *TransferableIn) Amount() uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Amount")
	ret0, _ := ret[0].(uint64)
	return ret0
}

// Amount indicates an expected call of Amount.
func (mr *TransferableInMockRecorder) Amount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Amount", reflect.TypeOf((*TransferableIn)(nil).Amount))
}

// Cost mocks base method.
func (m *TransferableIn) Cost() (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Cost")
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Cost indicates an expected call of Cost.
func (mr *TransferableInMockRecorder) Cost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Cost", reflect.TypeOf((*TransferableIn)(nil).Cost))
}

// InitCtx mocks base method.
func (m *TransferableIn) InitCtx(arg0 *snow.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InitCtx", arg0)
}

// InitCtx indicates an expected call of InitCtx.
func (mr *TransferableInMockRecorder) InitCtx(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitCtx", reflect.TypeOf((*TransferableIn)(nil).InitCtx), arg0)
}

// Verify mocks base method.
func (m *TransferableIn) Verify() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify")
	ret0, _ := ret[0].(error)
	return ret0
}

// Verify indicates an expected call of Verify.
func (mr *TransferableInMockRecorder) Verify() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*TransferableIn)(nil).Verify))
}
