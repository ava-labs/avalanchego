load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "network",
    srcs = [
        "gossip.go",
        "network.go",
        "tx_verifier.go",
        "warp.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/vms/platformvm/network",
    visibility = ["//visibility:public"],
    deps = [
        "//database",
        "//ids",
        "//network/p2p",
        "//network/p2p/acp118",
        "//network/p2p/gossip",
        "//proto/pb/platformvm",
        "//snow/engine/common",
        "//snow/validators",
        "//utils/logging",
        "//vms/platformvm/config",
        "//vms/platformvm/state",
        "//vms/platformvm/txs",
        "//vms/platformvm/txs/mempool",
        "//vms/platformvm/warp",
        "//vms/platformvm/warp/message",
        "//vms/platformvm/warp/payload",
        "//vms/txs/mempool",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_golang_google_protobuf//proto",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "network_test",
    srcs = [
        "gossip_test.go",
        "main_test.go",
        "network_test.go",
        "warp_test.go",
    ],
    embed = [":network"],
    deps = [
        "//ids",
        "//proto/pb/platformvm",
        "//snow/engine/common",
        "//snow/engine/common/commonmock",
        "//snow/snowtest",
        "//utils",
        "//utils/constants",
        "//utils/crypto/bls",
        "//utils/crypto/bls/signer/localsigner",
        "//utils/logging",
        "//vms/components/avax",
        "//vms/platformvm/config",
        "//vms/platformvm/genesis/genesistest",
        "//vms/platformvm/state",
        "//vms/platformvm/state/statetest",
        "//vms/platformvm/txs",
        "//vms/platformvm/txs/mempool",
        "//vms/platformvm/warp",
        "//vms/platformvm/warp/message",
        "//vms/platformvm/warp/payload",
        "//vms/txs/mempool",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_protobuf//proto",
        "@org_golang_x_exp//rand",
        "@org_uber_go_goleak//:goleak",
        "@org_uber_go_mock//gomock",
    ],
)
