load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "txs",
    srcs = [
        "add_delegator_tx.go",
        "add_permissionless_delegator_tx.go",
        "add_permissionless_validator_tx.go",
        "add_subnet_validator_tx.go",
        "add_validator_tx.go",
        "advance_time_tx.go",
        "base_tx.go",
        "codec.go",
        "convert_subnet_to_l1_tx.go",
        "create_chain_tx.go",
        "create_subnet_tx.go",
        "disable_l1_validator_tx.go",
        "export_tx.go",
        "import_tx.go",
        "increase_l1_validator_balance_tx.go",
        "priorities.go",
        "register_l1_validator_tx.go",
        "remove_subnet_validator_tx.go",
        "reward_validator_tx.go",
        "set_l1_validator_weight_tx.go",
        "staker_tx.go",
        "subnet_validator.go",
        "transfer_subnet_ownership_tx.go",
        "transform_subnet_tx.go",
        "tx.go",
        "unsigned_tx.go",
        "validator.go",
        "visitor.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/vms/platformvm/txs",
    visibility = ["//visibility:public"],
    deps = [
        "//codec",
        "//codec/linearcodec",
        "//ids",
        "//network/p2p/gossip",
        "//snow",
        "//utils",
        "//utils/constants",
        "//utils/crypto/bls",
        "//utils/crypto/secp256k1",
        "//utils/hashing",
        "//utils/math",
        "//utils/set",
        "//utils/units",
        "//utils/wrappers",
        "//vms/components/avax",
        "//vms/components/verify",
        "//vms/platformvm/fx",
        "//vms/platformvm/reward",
        "//vms/platformvm/signer",
        "//vms/platformvm/stakeable",
        "//vms/platformvm/warp/message",
        "//vms/secp256k1fx",
        "//vms/types",
    ],
)

go_test(
    name = "txs_test",
    srcs = [
        "add_delegator_test.go",
        "add_permissionless_delegator_tx_test.go",
        "add_permissionless_validator_tx_test.go",
        "add_subnet_validator_test.go",
        "add_validator_test.go",
        "base_tx_test.go",
        "convert_subnet_to_l1_tx_test.go",
        "create_chain_test.go",
        "disable_l1_validator_tx_test.go",
        "increase_l1_validator_balance_tx_test.go",
        "priorities_test.go",
        "register_l1_validator_tx_test.go",
        "remove_subnet_validator_tx_test.go",
        "set_l1_validator_weight_tx_test.go",
        "subnet_validator_test.go",
        "transfer_subnet_ownership_tx_test.go",
        "transform_subnet_tx_test.go",
        "validator_test.go",
    ],
    embed = [":txs"],
    embedsrcs = [
        "convert_subnet_to_l1_tx_test_complex.json",
        "convert_subnet_to_l1_tx_test_simple.json",
        "disable_l1_validator_tx_test.json",
        "increase_l1_validator_balance_tx_test.json",
        "register_l1_validator_tx_test.json",
        "set_l1_validator_weight_tx_test.json",
    ],
    deps = [
        "//ids",
        "//snow",
        "//snow/snowtest",
        "//utils",
        "//utils/constants",
        "//utils/crypto/bls",
        "//utils/crypto/bls/signer/localsigner",
        "//utils/crypto/secp256k1",
        "//utils/hashing",
        "//utils/math",
        "//utils/timer/mockable",
        "//utils/units",
        "//vms/components/avax",
        "//vms/components/avax/avaxmock",
        "//vms/components/verify",
        "//vms/components/verify/verifymock",
        "//vms/platformvm/fx/fxmock",
        "//vms/platformvm/reward",
        "//vms/platformvm/signer",
        "//vms/platformvm/stakeable",
        "//vms/platformvm/warp/message",
        "//vms/secp256k1fx",
        "//vms/types",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_mock//gomock",
    ],
)
