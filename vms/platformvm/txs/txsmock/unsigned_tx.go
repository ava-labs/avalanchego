// Code generated by MockGen. DO NOT EDIT.
// Source: vms/platformvm/txs/unsigned_tx.go
//
// Generated by this command:
//
//	mockgen -source=vms/platformvm/txs/unsigned_tx.go -destination=vms/platformvm/txs/txsmock/unsigned_tx.go -package=txsmock -exclude_interfaces= -mock_names=UnsignedTx=UnsignedTx
//

// Package txsmock is a generated GoMock package.
package txsmock

import (
	reflect "reflect"

	ids "github.com/ava-labs/avalanchego/ids"
	snow "github.com/ava-labs/avalanchego/snow"
	set "github.com/ava-labs/avalanchego/utils/set"
	avax "github.com/ava-labs/avalanchego/vms/components/avax"
	txs "github.com/ava-labs/avalanchego/vms/platformvm/txs"
	gomock "go.uber.org/mock/gomock"
)

// UnsignedTx is a mock of UnsignedTx interface.
type UnsignedTx struct {
	ctrl     *gomock.Controller
	recorder *UnsignedTxMockRecorder
}

// UnsignedTxMockRecorder is the mock recorder for UnsignedTx.
type UnsignedTxMockRecorder struct {
	mock *UnsignedTx
}

// NewUnsignedTx creates a new mock instance.
func NewUnsignedTx(ctrl *gomock.Controller) *UnsignedTx {
	mock := &UnsignedTx{ctrl: ctrl}
	mock.recorder = &UnsignedTxMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *UnsignedTx) EXPECT() *UnsignedTxMockRecorder {
	return m.recorder
}

// Bytes mocks base method.
func (m *UnsignedTx) Bytes() []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Bytes")
	ret0, _ := ret[0].([]byte)
	return ret0
}

// Bytes indicates an expected call of Bytes.
func (mr *UnsignedTxMockRecorder) Bytes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Bytes", reflect.TypeOf((*UnsignedTx)(nil).Bytes))
}

// InitCtx mocks base method.
func (m *UnsignedTx) InitCtx(ctx *snow.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InitCtx", ctx)
}

// InitCtx indicates an expected call of InitCtx.
func (mr *UnsignedTxMockRecorder) InitCtx(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitCtx", reflect.TypeOf((*UnsignedTx)(nil).InitCtx), ctx)
}

// InputIDs mocks base method.
func (m *UnsignedTx) InputIDs() set.Set[ids.ID] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InputIDs")
	ret0, _ := ret[0].(set.Set[ids.ID])
	return ret0
}

// InputIDs indicates an expected call of InputIDs.
func (mr *UnsignedTxMockRecorder) InputIDs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InputIDs", reflect.TypeOf((*UnsignedTx)(nil).InputIDs))
}

// Outputs mocks base method.
func (m *UnsignedTx) Outputs() []*avax.TransferableOutput {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Outputs")
	ret0, _ := ret[0].([]*avax.TransferableOutput)
	return ret0
}

// Outputs indicates an expected call of Outputs.
func (mr *UnsignedTxMockRecorder) Outputs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Outputs", reflect.TypeOf((*UnsignedTx)(nil).Outputs))
}

// SetBytes mocks base method.
func (m *UnsignedTx) SetBytes(unsignedBytes []byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetBytes", unsignedBytes)
}

// SetBytes indicates an expected call of SetBytes.
func (mr *UnsignedTxMockRecorder) SetBytes(unsignedBytes any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBytes", reflect.TypeOf((*UnsignedTx)(nil).SetBytes), unsignedBytes)
}

// SyntacticVerify mocks base method.
func (m *UnsignedTx) SyntacticVerify(ctx *snow.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SyntacticVerify", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// SyntacticVerify indicates an expected call of SyntacticVerify.
func (mr *UnsignedTxMockRecorder) SyntacticVerify(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SyntacticVerify", reflect.TypeOf((*UnsignedTx)(nil).SyntacticVerify), ctx)
}

// Visit mocks base method.
func (m *UnsignedTx) Visit(visitor txs.Visitor) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Visit", visitor)
	ret0, _ := ret[0].(error)
	return ret0
}

// Visit indicates an expected call of Visit.
func (mr *UnsignedTxMockRecorder) Visit(visitor any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Visit", reflect.TypeOf((*UnsignedTx)(nil).Visit), visitor)
}
