load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "state",
    srcs = [
        "chain_time_helpers.go",
        "diff.go",
        "disk_staker_diff_iterator.go",
        "expiry.go",
        "l1_validator.go",
        "metadata_codec.go",
        "metadata_delegator.go",
        "metadata_validator.go",
        "mock_chain.go",
        "mock_diff.go",
        "mock_state.go",
        "staker.go",
        "staker_diff_iterator.go",
        "staker_status.go",
        "stakers.go",
        "state.go",
        "subnet_id_node_id.go",
        "versions.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/vms/platformvm/state",
    visibility = ["//visibility:public"],
    deps = [
        "//cache",
        "//cache/metercacher",
        "//codec",
        "//codec/linearcodec",
        "//database",
        "//database/linkeddb",
        "//database/prefixdb",
        "//database/versiondb",
        "//ids",
        "//snow",
        "//snow/choices",
        "//snow/uptime",
        "//snow/validators",
        "//upgrade",
        "//utils",
        "//utils/constants",
        "//utils/crypto/bls",
        "//utils/hashing",
        "//utils/heap",
        "//utils/iterator",
        "//utils/logging",
        "//utils/math",
        "//utils/maybe",
        "//utils/set",
        "//utils/timer",
        "//utils/timer/mockable",
        "//utils/wrappers",
        "//vms/components/avax",
        "//vms/components/gas",
        "//vms/platformvm/block",
        "//vms/platformvm/config",
        "//vms/platformvm/fx",
        "//vms/platformvm/genesis",
        "//vms/platformvm/metrics",
        "//vms/platformvm/reward",
        "//vms/platformvm/status",
        "//vms/platformvm/txs",
        "//vms/platformvm/txs/fee",
        "//vms/platformvm/validators/fee",
        "@com_github_google_btree//:btree",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_golang_x_exp//maps",
        "@org_uber_go_mock//gomock",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "state_test",
    srcs = [
        "chain_time_helpers_test.go",
        "diff_test.go",
        "disk_staker_diff_iterator_test.go",
        "expiry_test.go",
        "l1_validator_test.go",
        "metadata_delegator_test.go",
        "metadata_validator_test.go",
        "mocks_generate_test.go",
        "staker_diff_iterator_test.go",
        "staker_test.go",
        "stakers_test.go",
        "state_test.go",
        "subnet_id_node_id_test.go",
    ],
    embed = [":state"],
    deps = [
        "//cache",
        "//codec",
        "//database",
        "//database/memdb",
        "//genesis",
        "//ids",
        "//snow",
        "//snow/choices",
        "//snow/validators",
        "//upgrade/upgradetest",
        "//utils",
        "//utils/constants",
        "//utils/crypto/bls",
        "//utils/crypto/bls/signer/localsigner",
        "//utils/iterator",
        "//utils/logging",
        "//utils/math",
        "//utils/maybe",
        "//utils/set",
        "//utils/timer/mockable",
        "//utils/units",
        "//utils/wrappers",
        "//vms/components/avax",
        "//vms/components/gas",
        "//vms/platformvm/block",
        "//vms/platformvm/config",
        "//vms/platformvm/fx/fxmock",
        "//vms/platformvm/genesis/genesistest",
        "//vms/platformvm/metrics",
        "//vms/platformvm/reward",
        "//vms/platformvm/signer",
        "//vms/platformvm/signer/signermock",
        "//vms/platformvm/status",
        "//vms/platformvm/txs",
        "//vms/platformvm/txs/fee",
        "//vms/platformvm/validators/fee",
        "//vms/secp256k1fx",
        "//vms/types",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//require",
        "@com_github_thepudds_fzgen//fuzzer",
        "@org_uber_go_mock//gomock",
    ],
)
