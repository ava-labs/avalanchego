load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "chains",
    srcs = [
        "linearizable_vm.go",
        "manager.go",
        "registrant.go",
        "subnets.go",
        "test_manager.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/chains",
    visibility = ["//visibility:public"],
    deps = [
        "//api/health",
        "//api/metrics",
        "//api/server",
        "//chains/atomic",
        "//database",
        "//database/meterdb",
        "//database/prefixdb",
        "//ids",
        "//message",
        "//network",
        "//network/p2p",
        "//proto/pb/p2p",
        "//snow",
        "//snow/consensus/snowball",
        "//snow/consensus/snowman",
        "//snow/engine/avalanche",
        "//snow/engine/avalanche/bootstrap",
        "//snow/engine/avalanche/bootstrap/queue",
        "//snow/engine/avalanche/getter",
        "//snow/engine/avalanche/state",
        "//snow/engine/avalanche/vertex",
        "//snow/engine/common",
        "//snow/engine/common/tracker",
        "//snow/engine/snowman",
        "//snow/engine/snowman/block",
        "//snow/engine/snowman/bootstrap",
        "//snow/engine/snowman/getter",
        "//snow/engine/snowman/syncer",
        "//snow/networking/handler",
        "//snow/networking/router",
        "//snow/networking/sender",
        "//snow/networking/timeout",
        "//snow/networking/tracker",
        "//snow/validators",
        "//staking",
        "//subnets",
        "//trace",
        "//upgrade",
        "//utils/buffer",
        "//utils/constants",
        "//utils/crypto/bls",
        "//utils/logging",
        "//utils/metric",
        "//utils/perms",
        "//utils/set",
        "//vms",
        "//vms/fx",
        "//vms/metervm",
        "//vms/nftfx",
        "//vms/platformvm/warp",
        "//vms/propertyfx",
        "//vms/proposervm",
        "//vms/secp256k1fx",
        "//vms/tracedvm",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "chains_test",
    srcs = ["subnets_test.go"],
    embed = [":chains"],
    deps = [
        "//ids",
        "//subnets",
        "//utils/constants",
        "@com_github_stretchr_testify//require",
    ],
)
