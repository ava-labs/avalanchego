load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "merkledb",
    srcs = [
        "batch.go",
        "bytes_pool.go",
        "cache.go",
        "codec.go",
        "db.go",
        "hashing.go",
        "history.go",
        "intermediate_node_db.go",
        "key.go",
        "metrics.go",
        "node.go",
        "proof.go",
        "tracer.go",
        "trie.go",
        "value_node_db.go",
        "view.go",
        "view_iterator.go",
        "wait_group.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/x/merkledb",
    visibility = ["//visibility:public"],
    deps = [
        "//cache",
        "//database",
        "//database/memdb",
        "//ids",
        "//proto/pb/sync",
        "//trace",
        "//utils",
        "//utils/buffer",
        "//utils/linked",
        "//utils/maybe",
        "//utils/set",
        "//utils/units",
        "//utils/wrappers",
        "@com_github_prometheus_client_golang//prometheus",
        "@io_opentelemetry_go_otel//attribute",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_golang_x_exp//maps",
    ],
)

go_test(
    name = "merkledb_test",
    srcs = [
        "bytes_pool_test.go",
        "cache_test.go",
        "codec_test.go",
        "db_test.go",
        "hashing_test.go",
        "helpers_test.go",
        "history_test.go",
        "intermediate_node_db_test.go",
        "key_test.go",
        "metrics_test.go",
        "node_test.go",
        "proof_test.go",
        "trie_test.go",
        "value_node_db_test.go",
        "view_iterator_test.go",
        "view_test.go",
        "wait_group_test.go",
    ],
    embed = [":merkledb"],
    deps = [
        "//database",
        "//database/dbtest",
        "//database/memdb",
        "//ids",
        "//proto/pb/sync",
        "//trace",
        "//utils",
        "//utils/hashing",
        "//utils/maybe",
        "//utils/set",
        "//utils/units",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_exp//maps",
    ],
)
