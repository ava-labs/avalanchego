load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "indexer",
    srcs = [
        "client.go",
        "codec.go",
        "container.go",
        "index.go",
        "indexer.go",
        "service.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/indexer",
    visibility = ["//visibility:public"],
    deps = [
        "//api/server",
        "//chains",
        "//codec",
        "//codec/linearcodec",
        "//database",
        "//database/prefixdb",
        "//database/versiondb",
        "//ids",
        "//snow",
        "//snow/engine/avalanche/vertex",
        "//snow/engine/common",
        "//snow/engine/snowman/block",
        "//utils/constants",
        "//utils/formatting",
        "//utils/json",
        "//utils/logging",
        "//utils/rpc",
        "//utils/timer/mockable",
        "//utils/wrappers",
        "@com_github_gorilla_rpc//v2:rpc",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "indexer_test",
    srcs = [
        "client_test.go",
        "index_test.go",
        "indexer_test.go",
    ],
    embed = [":indexer"],
    deps = [
        "//api/server",
        "//database/memdb",
        "//database/versiondb",
        "//ids",
        "//snow",
        "//snow/engine/avalanche/vertex/vertexmock",
        "//snow/engine/snowman/block/blockmock",
        "//snow/snowtest",
        "//utils",
        "//utils/formatting",
        "//utils/json",
        "//utils/logging",
        "//utils/rpc",
        "//utils/set",
        "//utils/timer/mockable",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_mock//gomock",
    ],
)
