// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: info/service.proto

package info

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNodeVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeVersionRequest) Reset() {
	*x = GetNodeVersionRequest{}
	mi := &file_info_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeVersionRequest) ProtoMessage() {}

func (x *GetNodeVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeVersionRequest.ProtoReflect.Descriptor instead.
func (*GetNodeVersionRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{0}
}

type GetNodeVersionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Semantic version of avalanchego this node is running.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Semantic version of the database this node is running.
	DatabaseVersion string `protobuf:"bytes,2,opt,name=database_version,json=databaseVersion,proto3" json:"database_version,omitempty"`
	// Plugin version this node is running.
	RpcProtocolVersion uint32 `protobuf:"varint,3,opt,name=rpc_protocol_version,json=rpcProtocolVersion,proto3" json:"rpc_protocol_version,omitempty"`
	// Avalanchego git commit hash this node was built with.
	GitCommit string `protobuf:"bytes,4,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	// VMs with the respective versions they are running.
	VmVersions    map[string]string `protobuf:"bytes,5,rep,name=vm_versions,json=vmVersions,proto3" json:"vm_versions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeVersionResponse) Reset() {
	*x = GetNodeVersionResponse{}
	mi := &file_info_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeVersionResponse) ProtoMessage() {}

func (x *GetNodeVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeVersionResponse.ProtoReflect.Descriptor instead.
func (*GetNodeVersionResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetNodeVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetNodeVersionResponse) GetDatabaseVersion() string {
	if x != nil {
		return x.DatabaseVersion
	}
	return ""
}

func (x *GetNodeVersionResponse) GetRpcProtocolVersion() uint32 {
	if x != nil {
		return x.RpcProtocolVersion
	}
	return 0
}

func (x *GetNodeVersionResponse) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *GetNodeVersionResponse) GetVmVersions() map[string]string {
	if x != nil {
		return x.VmVersions
	}
	return nil
}

type ProofOfPossession struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// BLS public key of this node.
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// BLS signature over the BLS public key of this node.
	Signature     string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProofOfPossession) Reset() {
	*x = ProofOfPossession{}
	mi := &file_info_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProofOfPossession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofOfPossession) ProtoMessage() {}

func (x *ProofOfPossession) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofOfPossession.ProtoReflect.Descriptor instead.
func (*ProofOfPossession) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{2}
}

func (x *ProofOfPossession) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *ProofOfPossession) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type GetNodeIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeIDRequest) Reset() {
	*x = GetNodeIDRequest{}
	mi := &file_info_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeIDRequest) ProtoMessage() {}

func (x *GetNodeIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeIDRequest.ProtoReflect.Descriptor instead.
func (*GetNodeIDRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{3}
}

type GetNodeIDResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node id of this node.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Proves possession of the BLS public key of this node.
	ProofOfPossession *ProofOfPossession `protobuf:"bytes,2,opt,name=proof_of_possession,json=proofOfPossession,proto3" json:"proof_of_possession,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetNodeIDResponse) Reset() {
	*x = GetNodeIDResponse{}
	mi := &file_info_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeIDResponse) ProtoMessage() {}

func (x *GetNodeIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeIDResponse.ProtoReflect.Descriptor instead.
func (*GetNodeIDResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetNodeIDResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GetNodeIDResponse) GetProofOfPossession() *ProofOfPossession {
	if x != nil {
		return x.ProofOfPossession
	}
	return nil
}

type GetNodeIPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeIPRequest) Reset() {
	*x = GetNodeIPRequest{}
	mi := &file_info_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeIPRequest) ProtoMessage() {}

func (x *GetNodeIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeIPRequest.ProtoReflect.Descriptor instead.
func (*GetNodeIPRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{5}
}

type GetNodeIPResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// IP address of this node.
	Ip            string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeIPResponse) Reset() {
	*x = GetNodeIPResponse{}
	mi := &file_info_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeIPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeIPResponse) ProtoMessage() {}

func (x *GetNodeIPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeIPResponse.ProtoReflect.Descriptor instead.
func (*GetNodeIPResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetNodeIPResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type GetNetworkIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkIDRequest) Reset() {
	*x = GetNetworkIDRequest{}
	mi := &file_info_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkIDRequest) ProtoMessage() {}

func (x *GetNetworkIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkIDRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkIDRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{7}
}

type GetNetworkIDResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network id this node is running.
	NetworkId     uint32 `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkIDResponse) Reset() {
	*x = GetNetworkIDResponse{}
	mi := &file_info_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkIDResponse) ProtoMessage() {}

func (x *GetNetworkIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkIDResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkIDResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetNetworkIDResponse) GetNetworkId() uint32 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

type GetNetworkNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkNameRequest) Reset() {
	*x = GetNetworkNameRequest{}
	mi := &file_info_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkNameRequest) ProtoMessage() {}

func (x *GetNetworkNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkNameRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkNameRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{9}
}

type GetNetworkNameResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network name this node is running.
	NetworkName   string `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkNameResponse) Reset() {
	*x = GetNetworkNameResponse{}
	mi := &file_info_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkNameResponse) ProtoMessage() {}

func (x *GetNetworkNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkNameResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkNameResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetNetworkNameResponse) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

type GetChainIDRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Alias of the chain to lookup.
	Alias         string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChainIDRequest) Reset() {
	*x = GetChainIDRequest{}
	mi := &file_info_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChainIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainIDRequest) ProtoMessage() {}

func (x *GetChainIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainIDRequest.ProtoReflect.Descriptor instead.
func (*GetChainIDRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetChainIDRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type GetChainIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       string                 `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChainIDResponse) Reset() {
	*x = GetChainIDResponse{}
	mi := &file_info_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChainIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainIDResponse) ProtoMessage() {}

func (x *GetChainIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainIDResponse.ProtoReflect.Descriptor instead.
func (*GetChainIDResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetChainIDResponse) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

type GetPeersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional parameter to specify peers for which metadata should be returned for.
	NodeIds       []string `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPeersRequest) Reset() {
	*x = GetPeersRequest{}
	mi := &file_info_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersRequest) ProtoMessage() {}

func (x *GetPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersRequest.ProtoReflect.Descriptor instead.
func (*GetPeersRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetPeersRequest) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

// Metadata about a peer in the network.
type Peer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// IP address of this peer.
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	// Public IP address of this peer.
	PublicIp string `protobuf:"bytes,2,opt,name=public_ip,json=publicIp,proto3" json:"public_ip,omitempty"`
	// Node id of this peer.
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Avalanchego version this peer is running.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Timestamp of when this node last wrote a message to this peer.
	LastSent *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_sent,json=lastSent,proto3" json:"last_sent,omitempty"`
	// Timestamp of when this node last read a message from this peer.
	LastReceived *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_received,json=lastReceived,proto3" json:"last_received,omitempty"`
	// Our observed uptime percentage of this peer on the primary network [0, 100].
	ObservedUptime uint32 `protobuf:"varint,7,opt,name=observed_uptime,json=observedUptime,proto3" json:"observed_uptime,omitempty"`
	// Subnets this peer is tracking.
	TrackedSubnets []string `protobuf:"bytes,8,rep,name=tracked_subnets,json=trackedSubnets,proto3" json:"tracked_subnets,omitempty"`
	// Chain ids that this node is benching this peer on.
	Benched       []string `protobuf:"bytes,9,rep,name=benched,proto3" json:"benched,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Peer) Reset() {
	*x = Peer{}
	mi := &file_info_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{14}
}

func (x *Peer) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Peer) GetPublicIp() string {
	if x != nil {
		return x.PublicIp
	}
	return ""
}

func (x *Peer) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Peer) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Peer) GetLastSent() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSent
	}
	return nil
}

func (x *Peer) GetLastReceived() *timestamppb.Timestamp {
	if x != nil {
		return x.LastReceived
	}
	return nil
}

func (x *Peer) GetObservedUptime() uint32 {
	if x != nil {
		return x.ObservedUptime
	}
	return 0
}

func (x *Peer) GetTrackedSubnets() []string {
	if x != nil {
		return x.TrackedSubnets
	}
	return nil
}

func (x *Peer) GetBenched() []string {
	if x != nil {
		return x.Benched
	}
	return nil
}

type GetPeersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Peers this node is connected to.
	Peers         []*Peer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPeersResponse) Reset() {
	*x = GetPeersResponse{}
	mi := &file_info_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersResponse) ProtoMessage() {}

func (x *GetPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersResponse.ProtoReflect.Descriptor instead.
func (*GetPeersResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetPeersResponse) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type GetBootstrappedRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chain id or an alias for a chain this node is running.
	Chain         string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBootstrappedRequest) Reset() {
	*x = GetBootstrappedRequest{}
	mi := &file_info_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBootstrappedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrappedRequest) ProtoMessage() {}

func (x *GetBootstrappedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrappedRequest.ProtoReflect.Descriptor instead.
func (*GetBootstrappedRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetBootstrappedRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

type GetBootstrappedResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if this node is running this chain and has finished bootstrapping it.
	Bootstrapped  bool `protobuf:"varint,1,opt,name=bootstrapped,proto3" json:"bootstrapped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBootstrappedResponse) Reset() {
	*x = GetBootstrappedResponse{}
	mi := &file_info_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBootstrappedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrappedResponse) ProtoMessage() {}

func (x *GetBootstrappedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrappedResponse.ProtoReflect.Descriptor instead.
func (*GetBootstrappedResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetBootstrappedResponse) GetBootstrapped() bool {
	if x != nil {
		return x.Bootstrapped
	}
	return false
}

type GetUpgradesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUpgradesRequest) Reset() {
	*x = GetUpgradesRequest{}
	mi := &file_info_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUpgradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpgradesRequest) ProtoMessage() {}

func (x *GetUpgradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpgradesRequest.ProtoReflect.Descriptor instead.
func (*GetUpgradesRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{18}
}

type GetUpgradesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Starting time for the Apricot Phase 1 upgrade.
	ApricotPhase_1Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=apricot_phase_1_time,json=apricotPhase1Time,proto3" json:"apricot_phase_1_time,omitempty"`
	// Starting time for the Apricot Phase 2 upgrade.
	ApricotPhase_2Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=apricot_phase_2_time,json=apricotPhase2Time,proto3" json:"apricot_phase_2_time,omitempty"`
	// Starting time for the Apricot Phase 3 upgrade.
	ApricotPhase_3Time *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=apricot_phase_3_time,json=apricotPhase3Time,proto3" json:"apricot_phase_3_time,omitempty"`
	// Starting time for the Apricot Phase 4 upgrade.
	ApricotPhase_4Time *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=apricot_phase_4_time,json=apricotPhase4Time,proto3" json:"apricot_phase_4_time,omitempty"`
	// The minimum P-Chain block height that must be reached to activate Apricot Phase 4.
	ApricotPhase_4MinPChainHeight uint64 `protobuf:"varint,5,opt,name=apricot_phase_4_min_p_chain_height,json=apricotPhase4MinPChainHeight,proto3" json:"apricot_phase_4_min_p_chain_height,omitempty"`
	// Starting time for the Apricot Phase 5 upgrade.
	ApricotPhase_5Time *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=apricot_phase_5_time,json=apricotPhase5Time,proto3" json:"apricot_phase_5_time,omitempty"`
	// Starting time for the Apricot Phase Pre-6 upgrade.
	ApricotPhasePre_6Time *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=apricot_phase_pre_6_time,json=apricotPhasePre6Time,proto3" json:"apricot_phase_pre_6_time,omitempty"`
	// Starting time for the Apricot Phase 6 upgrade.
	ApricotPhase_6Time *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=apricot_phase_6_time,json=apricotPhase6Time,proto3" json:"apricot_phase_6_time,omitempty"`
	// Starting time for the Apricot Phase Post-6 upgrade.
	ApricotPhasePost_6Time *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=apricot_phase_post_6_time,json=apricotPhasePost6Time,proto3" json:"apricot_phase_post_6_time,omitempty"`
	// Starting time for the Banff upgrade.
	BanffTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=banff_time,json=banffTime,proto3" json:"banff_time,omitempty"`
	// Starting time for the Cortina upgrade.
	CortinaTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=cortina_time,json=cortinaTime,proto3" json:"cortina_time,omitempty"`
	// The stop vertex for the Cortina X-Chain linearization.
	CortinaXChainStopVertexId string `protobuf:"bytes,12,opt,name=cortina_x_chain_stop_vertex_id,json=cortinaXChainStopVertexId,proto3" json:"cortina_x_chain_stop_vertex_id,omitempty"`
	// Starting time for the Durango upgrade.
	DurangoTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=durango_time,json=durangoTime,proto3" json:"durango_time,omitempty"`
	// Starting time for the Etna upgrade.
	EtnaTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=etna_time,json=etnaTime,proto3" json:"etna_time,omitempty"`
	// Starting time for the Fortuna upgrade.
	FortunaTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=fortuna_time,json=fortunaTime,proto3" json:"fortuna_time,omitempty"`
	// Starting time for the Granite upgrade.
	GraniteTime   *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=granite_time,json=graniteTime,proto3" json:"granite_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUpgradesResponse) Reset() {
	*x = GetUpgradesResponse{}
	mi := &file_info_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUpgradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpgradesResponse) ProtoMessage() {}

func (x *GetUpgradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpgradesResponse.ProtoReflect.Descriptor instead.
func (*GetUpgradesResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetUpgradesResponse) GetApricotPhase_1Time() *timestamppb.Timestamp {
	if x != nil {
		return x.ApricotPhase_1Time
	}
	return nil
}

func (x *GetUpgradesResponse) GetApricotPhase_2Time() *timestamppb.Timestamp {
	if x != nil {
		return x.ApricotPhase_2Time
	}
	return nil
}

func (x *GetUpgradesResponse) GetApricotPhase_3Time() *timestamppb.Timestamp {
	if x != nil {
		return x.ApricotPhase_3Time
	}
	return nil
}

func (x *GetUpgradesResponse) GetApricotPhase_4Time() *timestamppb.Timestamp {
	if x != nil {
		return x.ApricotPhase_4Time
	}
	return nil
}

func (x *GetUpgradesResponse) GetApricotPhase_4MinPChainHeight() uint64 {
	if x != nil {
		return x.ApricotPhase_4MinPChainHeight
	}
	return 0
}

func (x *GetUpgradesResponse) GetApricotPhase_5Time() *timestamppb.Timestamp {
	if x != nil {
		return x.ApricotPhase_5Time
	}
	return nil
}

func (x *GetUpgradesResponse) GetApricotPhasePre_6Time() *timestamppb.Timestamp {
	if x != nil {
		return x.ApricotPhasePre_6Time
	}
	return nil
}

func (x *GetUpgradesResponse) GetApricotPhase_6Time() *timestamppb.Timestamp {
	if x != nil {
		return x.ApricotPhase_6Time
	}
	return nil
}

func (x *GetUpgradesResponse) GetApricotPhasePost_6Time() *timestamppb.Timestamp {
	if x != nil {
		return x.ApricotPhasePost_6Time
	}
	return nil
}

func (x *GetUpgradesResponse) GetBanffTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BanffTime
	}
	return nil
}

func (x *GetUpgradesResponse) GetCortinaTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CortinaTime
	}
	return nil
}

func (x *GetUpgradesResponse) GetCortinaXChainStopVertexId() string {
	if x != nil {
		return x.CortinaXChainStopVertexId
	}
	return ""
}

func (x *GetUpgradesResponse) GetDurangoTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DurangoTime
	}
	return nil
}

func (x *GetUpgradesResponse) GetEtnaTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EtnaTime
	}
	return nil
}

func (x *GetUpgradesResponse) GetFortunaTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FortunaTime
	}
	return nil
}

func (x *GetUpgradesResponse) GetGraniteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.GraniteTime
	}
	return nil
}

type GetUptimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUptimeRequest) Reset() {
	*x = GetUptimeRequest{}
	mi := &file_info_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUptimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUptimeRequest) ProtoMessage() {}

func (x *GetUptimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUptimeRequest.ProtoReflect.Descriptor instead.
func (*GetUptimeRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{20}
}

type GetUptimeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The percent of network stake that thinks that this node is above the minimum uptime requirement.
	RewardingStakePercentage float64 `protobuf:"fixed64,1,opt,name=rewarding_stake_percentage,json=rewardingStakePercentage,proto3" json:"rewarding_stake_percentage,omitempty"`
	// The average perceived uptime of this node weighted by stake.
	// Note that this is different from RewardingStakePercentage, which shows
	// the percent of the network stake that thinks this node is above the
	// uptime requirement. Weighted average percentage is weighted by uptime,
	// i.e if the uptime requirement is 85 and a peer reports 40 percent it will be
	// counted (40*weight) in weighted average percentage but not in
	// rewarding stake percentage since 40 < 85
	WeightedAveragePercentage float64 `protobuf:"fixed64,2,opt,name=weighted_average_percentage,json=weightedAveragePercentage,proto3" json:"weighted_average_percentage,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetUptimeResponse) Reset() {
	*x = GetUptimeResponse{}
	mi := &file_info_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUptimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUptimeResponse) ProtoMessage() {}

func (x *GetUptimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUptimeResponse.ProtoReflect.Descriptor instead.
func (*GetUptimeResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetUptimeResponse) GetRewardingStakePercentage() float64 {
	if x != nil {
		return x.RewardingStakePercentage
	}
	return 0
}

func (x *GetUptimeResponse) GetWeightedAveragePercentage() float64 {
	if x != nil {
		return x.WeightedAveragePercentage
	}
	return 0
}

type ACP struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total network stake weight supporting this ACP.
	SupportWeight uint64 `protobuf:"varint,1,opt,name=support_weight,json=supportWeight,proto3" json:"support_weight,omitempty"`
	// Node ids that support this ACP.
	Supporters []string `protobuf:"bytes,2,rep,name=supporters,proto3" json:"supporters,omitempty"`
	// Total network stake weight objecting this ACP.
	ObjectWeight uint64 `protobuf:"varint,3,opt,name=object_weight,json=objectWeight,proto3" json:"object_weight,omitempty"`
	// Node ids that object to this ACP.
	Objectors []string `protobuf:"bytes,4,rep,name=objectors,proto3" json:"objectors,omitempty"`
	// Total network stake weight that do not explicitly support or object this ACP.
	AbstainWeight uint64 `protobuf:"varint,5,opt,name=abstain_weight,json=abstainWeight,proto3" json:"abstain_weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ACP) Reset() {
	*x = ACP{}
	mi := &file_info_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ACP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACP) ProtoMessage() {}

func (x *ACP) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACP.ProtoReflect.Descriptor instead.
func (*ACP) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{22}
}

func (x *ACP) GetSupportWeight() uint64 {
	if x != nil {
		return x.SupportWeight
	}
	return 0
}

func (x *ACP) GetSupporters() []string {
	if x != nil {
		return x.Supporters
	}
	return nil
}

func (x *ACP) GetObjectWeight() uint64 {
	if x != nil {
		return x.ObjectWeight
	}
	return 0
}

func (x *ACP) GetObjectors() []string {
	if x != nil {
		return x.Objectors
	}
	return nil
}

func (x *ACP) GetAbstainWeight() uint64 {
	if x != nil {
		return x.AbstainWeight
	}
	return 0
}

type GetACPsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetACPsRequest) Reset() {
	*x = GetACPsRequest{}
	mi := &file_info_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetACPsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetACPsRequest) ProtoMessage() {}

func (x *GetACPsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetACPsRequest.ProtoReflect.Descriptor instead.
func (*GetACPsRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{23}
}

type GetACPsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ACPs and their network metadata.
	Acps          map[string]*ACP `protobuf:"bytes,1,rep,name=acps,proto3" json:"acps,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetACPsResponse) Reset() {
	*x = GetACPsResponse{}
	mi := &file_info_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetACPsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetACPsResponse) ProtoMessage() {}

func (x *GetACPsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetACPsResponse.ProtoReflect.Descriptor instead.
func (*GetACPsResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetACPsResponse) GetAcps() map[string]*ACP {
	if x != nil {
		return x.Acps
	}
	return nil
}

type GetVMsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMsRequest) Reset() {
	*x = GetVMsRequest{}
	mi := &file_info_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMsRequest) ProtoMessage() {}

func (x *GetVMsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMsRequest.ProtoReflect.Descriptor instead.
func (*GetVMsRequest) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{25}
}

type GetVMsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// VMs and their respective aliases this node is running.
	Vms map[string]*VMAliases `protobuf:"bytes,1,rep,name=vms,proto3" json:"vms,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Feature extensions and their respective aliases this node is running.
	Fxs           map[string]string `protobuf:"bytes,2,rep,name=fxs,proto3" json:"fxs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMsResponse) Reset() {
	*x = GetVMsResponse{}
	mi := &file_info_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMsResponse) ProtoMessage() {}

func (x *GetVMsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMsResponse.ProtoReflect.Descriptor instead.
func (*GetVMsResponse) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetVMsResponse) GetVms() map[string]*VMAliases {
	if x != nil {
		return x.Vms
	}
	return nil
}

func (x *GetVMsResponse) GetFxs() map[string]string {
	if x != nil {
		return x.Fxs
	}
	return nil
}

type VMAliases struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Aliases for a VM.
	Aliases       []string `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMAliases) Reset() {
	*x = VMAliases{}
	mi := &file_info_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMAliases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMAliases) ProtoMessage() {}

func (x *VMAliases) ProtoReflect() protoreflect.Message {
	mi := &file_info_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMAliases.ProtoReflect.Descriptor instead.
func (*VMAliases) Descriptor() ([]byte, []int) {
	return file_info_service_proto_rawDescGZIP(), []int{27}
}

func (x *VMAliases) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

var File_info_service_proto protoreflect.FileDescriptor

const file_info_service_proto_rawDesc = "" +
	"\n" +
	"\x12info/service.proto\x12\x04info\x1a\x1fgoogle/protobuf/timestamp.proto\"\x17\n" +
	"\x15GetNodeVersionRequest\"\xbc\x02\n" +
	"\x16GetNodeVersionResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12)\n" +
	"\x10database_version\x18\x02 \x01(\tR\x0fdatabaseVersion\x120\n" +
	"\x14rpc_protocol_version\x18\x03 \x01(\rR\x12rpcProtocolVersion\x12\x1d\n" +
	"\n" +
	"git_commit\x18\x04 \x01(\tR\tgitCommit\x12M\n" +
	"\vvm_versions\x18\x05 \x03(\v2,.info.GetNodeVersionResponse.VmVersionsEntryR\n" +
	"vmVersions\x1a=\n" +
	"\x0fVmVersionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"P\n" +
	"\x11ProofOfPossession\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\tR\tpublicKey\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\tR\tsignature\"\x12\n" +
	"\x10GetNodeIDRequest\"u\n" +
	"\x11GetNodeIDResponse\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12G\n" +
	"\x13proof_of_possession\x18\x02 \x01(\v2\x17.info.ProofOfPossessionR\x11proofOfPossession\"\x12\n" +
	"\x10GetNodeIPRequest\"#\n" +
	"\x11GetNodeIPResponse\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\"\x15\n" +
	"\x13GetNetworkIDRequest\"5\n" +
	"\x14GetNetworkIDResponse\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\rR\tnetworkId\"\x17\n" +
	"\x15GetNetworkNameRequest\";\n" +
	"\x16GetNetworkNameResponse\x12!\n" +
	"\fnetwork_name\x18\x01 \x01(\tR\vnetworkName\")\n" +
	"\x11GetChainIDRequest\x12\x14\n" +
	"\x05alias\x18\x01 \x01(\tR\x05alias\"/\n" +
	"\x12GetChainIDResponse\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\tR\achainId\",\n" +
	"\x0fGetPeersRequest\x12\x19\n" +
	"\bnode_ids\x18\x01 \x03(\tR\anodeIds\"\xcc\x02\n" +
	"\x04Peer\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x1b\n" +
	"\tpublic_ip\x18\x02 \x01(\tR\bpublicIp\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x127\n" +
	"\tlast_sent\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\blastSent\x12?\n" +
	"\rlast_received\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\flastReceived\x12'\n" +
	"\x0fobserved_uptime\x18\a \x01(\rR\x0eobservedUptime\x12'\n" +
	"\x0ftracked_subnets\x18\b \x03(\tR\x0etrackedSubnets\x12\x18\n" +
	"\abenched\x18\t \x03(\tR\abenched\"4\n" +
	"\x10GetPeersResponse\x12 \n" +
	"\x05peers\x18\x01 \x03(\v2\n" +
	".info.PeerR\x05peers\".\n" +
	"\x16GetBootstrappedRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\"=\n" +
	"\x17GetBootstrappedResponse\x12\"\n" +
	"\fbootstrapped\x18\x01 \x01(\bR\fbootstrapped\"\x14\n" +
	"\x12GetUpgradesRequest\"\x8a\t\n" +
	"\x13GetUpgradesResponse\x12K\n" +
	"\x14apricot_phase_1_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x11apricotPhase1Time\x12K\n" +
	"\x14apricot_phase_2_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x11apricotPhase2Time\x12K\n" +
	"\x14apricot_phase_3_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x11apricotPhase3Time\x12K\n" +
	"\x14apricot_phase_4_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x11apricotPhase4Time\x12H\n" +
	"\"apricot_phase_4_min_p_chain_height\x18\x05 \x01(\x04R\x1capricotPhase4MinPChainHeight\x12K\n" +
	"\x14apricot_phase_5_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x11apricotPhase5Time\x12R\n" +
	"\x18apricot_phase_pre_6_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x14apricotPhasePre6Time\x12K\n" +
	"\x14apricot_phase_6_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x11apricotPhase6Time\x12T\n" +
	"\x19apricot_phase_post_6_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x15apricotPhasePost6Time\x129\n" +
	"\n" +
	"banff_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tbanffTime\x12=\n" +
	"\fcortina_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vcortinaTime\x12A\n" +
	"\x1ecortina_x_chain_stop_vertex_id\x18\f \x01(\tR\x19cortinaXChainStopVertexId\x12=\n" +
	"\fdurango_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\vdurangoTime\x127\n" +
	"\tetna_time\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\betnaTime\x12=\n" +
	"\ffortuna_time\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\vfortunaTime\x12=\n" +
	"\fgranite_time\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\vgraniteTime\"\x12\n" +
	"\x10GetUptimeRequest\"\x91\x01\n" +
	"\x11GetUptimeResponse\x12<\n" +
	"\x1arewarding_stake_percentage\x18\x01 \x01(\x01R\x18rewardingStakePercentage\x12>\n" +
	"\x1bweighted_average_percentage\x18\x02 \x01(\x01R\x19weightedAveragePercentage\"\xb6\x01\n" +
	"\x03ACP\x12%\n" +
	"\x0esupport_weight\x18\x01 \x01(\x04R\rsupportWeight\x12\x1e\n" +
	"\n" +
	"supporters\x18\x02 \x03(\tR\n" +
	"supporters\x12#\n" +
	"\robject_weight\x18\x03 \x01(\x04R\fobjectWeight\x12\x1c\n" +
	"\tobjectors\x18\x04 \x03(\tR\tobjectors\x12%\n" +
	"\x0eabstain_weight\x18\x05 \x01(\x04R\rabstainWeight\"\x10\n" +
	"\x0eGetACPsRequest\"\x8a\x01\n" +
	"\x0fGetACPsResponse\x123\n" +
	"\x04acps\x18\x01 \x03(\v2\x1f.info.GetACPsResponse.AcpsEntryR\x04acps\x1aB\n" +
	"\tAcpsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1f\n" +
	"\x05value\x18\x02 \x01(\v2\t.info.ACPR\x05value:\x028\x01\"\x0f\n" +
	"\rGetVMsRequest\"\xf3\x01\n" +
	"\x0eGetVMsResponse\x12/\n" +
	"\x03vms\x18\x01 \x03(\v2\x1d.info.GetVMsResponse.VmsEntryR\x03vms\x12/\n" +
	"\x03fxs\x18\x02 \x03(\v2\x1d.info.GetVMsResponse.FxsEntryR\x03fxs\x1aG\n" +
	"\bVmsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\v2\x0f.info.VMAliasesR\x05value:\x028\x01\x1a6\n" +
	"\bFxsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"%\n" +
	"\tVMAliases\x12\x18\n" +
	"\aaliases\x18\x01 \x03(\tR\aaliases2\xa5\x06\n" +
	"\vInfoService\x12K\n" +
	"\x0eGetNodeVersion\x12\x1b.info.GetNodeVersionRequest\x1a\x1c.info.GetNodeVersionResponse\x12<\n" +
	"\tGetNodeID\x12\x16.info.GetNodeIDRequest\x1a\x17.info.GetNodeIDResponse\x12<\n" +
	"\tGetNodeIP\x12\x16.info.GetNodeIPRequest\x1a\x17.info.GetNodeIPResponse\x12E\n" +
	"\fGetNetworkID\x12\x19.info.GetNetworkIDRequest\x1a\x1a.info.GetNetworkIDResponse\x12K\n" +
	"\x0eGetNetworkName\x12\x1b.info.GetNetworkNameRequest\x1a\x1c.info.GetNetworkNameResponse\x12?\n" +
	"\n" +
	"GetChainID\x12\x17.info.GetChainIDRequest\x1a\x18.info.GetChainIDResponse\x129\n" +
	"\bGetPeers\x12\x15.info.GetPeersRequest\x1a\x16.info.GetPeersResponse\x12N\n" +
	"\x0fGetBootstrapped\x12\x1c.info.GetBootstrappedRequest\x1a\x1d.info.GetBootstrappedResponse\x12B\n" +
	"\vGetUpgrades\x12\x18.info.GetUpgradesRequest\x1a\x19.info.GetUpgradesResponse\x12<\n" +
	"\tGetUptime\x12\x16.info.GetUptimeRequest\x1a\x17.info.GetUptimeResponse\x126\n" +
	"\aGetACPs\x12\x14.info.GetACPsRequest\x1a\x15.info.GetACPsResponse\x123\n" +
	"\x06GetVMs\x12\x13.info.GetVMsRequest\x1a\x14.info.GetVMsResponseB6Z4github.com/ava-labs/avalanchego/connectproto/pb/infob\x06proto3"

var (
	file_info_service_proto_rawDescOnce sync.Once
	file_info_service_proto_rawDescData []byte
)

func file_info_service_proto_rawDescGZIP() []byte {
	file_info_service_proto_rawDescOnce.Do(func() {
		file_info_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_info_service_proto_rawDesc), len(file_info_service_proto_rawDesc)))
	})
	return file_info_service_proto_rawDescData
}

var file_info_service_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_info_service_proto_goTypes = []any{
	(*GetNodeVersionRequest)(nil),   // 0: info.GetNodeVersionRequest
	(*GetNodeVersionResponse)(nil),  // 1: info.GetNodeVersionResponse
	(*ProofOfPossession)(nil),       // 2: info.ProofOfPossession
	(*GetNodeIDRequest)(nil),        // 3: info.GetNodeIDRequest
	(*GetNodeIDResponse)(nil),       // 4: info.GetNodeIDResponse
	(*GetNodeIPRequest)(nil),        // 5: info.GetNodeIPRequest
	(*GetNodeIPResponse)(nil),       // 6: info.GetNodeIPResponse
	(*GetNetworkIDRequest)(nil),     // 7: info.GetNetworkIDRequest
	(*GetNetworkIDResponse)(nil),    // 8: info.GetNetworkIDResponse
	(*GetNetworkNameRequest)(nil),   // 9: info.GetNetworkNameRequest
	(*GetNetworkNameResponse)(nil),  // 10: info.GetNetworkNameResponse
	(*GetChainIDRequest)(nil),       // 11: info.GetChainIDRequest
	(*GetChainIDResponse)(nil),      // 12: info.GetChainIDResponse
	(*GetPeersRequest)(nil),         // 13: info.GetPeersRequest
	(*Peer)(nil),                    // 14: info.Peer
	(*GetPeersResponse)(nil),        // 15: info.GetPeersResponse
	(*GetBootstrappedRequest)(nil),  // 16: info.GetBootstrappedRequest
	(*GetBootstrappedResponse)(nil), // 17: info.GetBootstrappedResponse
	(*GetUpgradesRequest)(nil),      // 18: info.GetUpgradesRequest
	(*GetUpgradesResponse)(nil),     // 19: info.GetUpgradesResponse
	(*GetUptimeRequest)(nil),        // 20: info.GetUptimeRequest
	(*GetUptimeResponse)(nil),       // 21: info.GetUptimeResponse
	(*ACP)(nil),                     // 22: info.ACP
	(*GetACPsRequest)(nil),          // 23: info.GetACPsRequest
	(*GetACPsResponse)(nil),         // 24: info.GetACPsResponse
	(*GetVMsRequest)(nil),           // 25: info.GetVMsRequest
	(*GetVMsResponse)(nil),          // 26: info.GetVMsResponse
	(*VMAliases)(nil),               // 27: info.VMAliases
	nil,                             // 28: info.GetNodeVersionResponse.VmVersionsEntry
	nil,                             // 29: info.GetACPsResponse.AcpsEntry
	nil,                             // 30: info.GetVMsResponse.VmsEntry
	nil,                             // 31: info.GetVMsResponse.FxsEntry
	(*timestamppb.Timestamp)(nil),   // 32: google.protobuf.Timestamp
}
var file_info_service_proto_depIdxs = []int32{
	28, // 0: info.GetNodeVersionResponse.vm_versions:type_name -> info.GetNodeVersionResponse.VmVersionsEntry
	2,  // 1: info.GetNodeIDResponse.proof_of_possession:type_name -> info.ProofOfPossession
	32, // 2: info.Peer.last_sent:type_name -> google.protobuf.Timestamp
	32, // 3: info.Peer.last_received:type_name -> google.protobuf.Timestamp
	14, // 4: info.GetPeersResponse.peers:type_name -> info.Peer
	32, // 5: info.GetUpgradesResponse.apricot_phase_1_time:type_name -> google.protobuf.Timestamp
	32, // 6: info.GetUpgradesResponse.apricot_phase_2_time:type_name -> google.protobuf.Timestamp
	32, // 7: info.GetUpgradesResponse.apricot_phase_3_time:type_name -> google.protobuf.Timestamp
	32, // 8: info.GetUpgradesResponse.apricot_phase_4_time:type_name -> google.protobuf.Timestamp
	32, // 9: info.GetUpgradesResponse.apricot_phase_5_time:type_name -> google.protobuf.Timestamp
	32, // 10: info.GetUpgradesResponse.apricot_phase_pre_6_time:type_name -> google.protobuf.Timestamp
	32, // 11: info.GetUpgradesResponse.apricot_phase_6_time:type_name -> google.protobuf.Timestamp
	32, // 12: info.GetUpgradesResponse.apricot_phase_post_6_time:type_name -> google.protobuf.Timestamp
	32, // 13: info.GetUpgradesResponse.banff_time:type_name -> google.protobuf.Timestamp
	32, // 14: info.GetUpgradesResponse.cortina_time:type_name -> google.protobuf.Timestamp
	32, // 15: info.GetUpgradesResponse.durango_time:type_name -> google.protobuf.Timestamp
	32, // 16: info.GetUpgradesResponse.etna_time:type_name -> google.protobuf.Timestamp
	32, // 17: info.GetUpgradesResponse.fortuna_time:type_name -> google.protobuf.Timestamp
	32, // 18: info.GetUpgradesResponse.granite_time:type_name -> google.protobuf.Timestamp
	29, // 19: info.GetACPsResponse.acps:type_name -> info.GetACPsResponse.AcpsEntry
	30, // 20: info.GetVMsResponse.vms:type_name -> info.GetVMsResponse.VmsEntry
	31, // 21: info.GetVMsResponse.fxs:type_name -> info.GetVMsResponse.FxsEntry
	22, // 22: info.GetACPsResponse.AcpsEntry.value:type_name -> info.ACP
	27, // 23: info.GetVMsResponse.VmsEntry.value:type_name -> info.VMAliases
	0,  // 24: info.InfoService.GetNodeVersion:input_type -> info.GetNodeVersionRequest
	3,  // 25: info.InfoService.GetNodeID:input_type -> info.GetNodeIDRequest
	5,  // 26: info.InfoService.GetNodeIP:input_type -> info.GetNodeIPRequest
	7,  // 27: info.InfoService.GetNetworkID:input_type -> info.GetNetworkIDRequest
	9,  // 28: info.InfoService.GetNetworkName:input_type -> info.GetNetworkNameRequest
	11, // 29: info.InfoService.GetChainID:input_type -> info.GetChainIDRequest
	13, // 30: info.InfoService.GetPeers:input_type -> info.GetPeersRequest
	16, // 31: info.InfoService.GetBootstrapped:input_type -> info.GetBootstrappedRequest
	18, // 32: info.InfoService.GetUpgrades:input_type -> info.GetUpgradesRequest
	20, // 33: info.InfoService.GetUptime:input_type -> info.GetUptimeRequest
	23, // 34: info.InfoService.GetACPs:input_type -> info.GetACPsRequest
	25, // 35: info.InfoService.GetVMs:input_type -> info.GetVMsRequest
	1,  // 36: info.InfoService.GetNodeVersion:output_type -> info.GetNodeVersionResponse
	4,  // 37: info.InfoService.GetNodeID:output_type -> info.GetNodeIDResponse
	6,  // 38: info.InfoService.GetNodeIP:output_type -> info.GetNodeIPResponse
	8,  // 39: info.InfoService.GetNetworkID:output_type -> info.GetNetworkIDResponse
	10, // 40: info.InfoService.GetNetworkName:output_type -> info.GetNetworkNameResponse
	12, // 41: info.InfoService.GetChainID:output_type -> info.GetChainIDResponse
	15, // 42: info.InfoService.GetPeers:output_type -> info.GetPeersResponse
	17, // 43: info.InfoService.GetBootstrapped:output_type -> info.GetBootstrappedResponse
	19, // 44: info.InfoService.GetUpgrades:output_type -> info.GetUpgradesResponse
	21, // 45: info.InfoService.GetUptime:output_type -> info.GetUptimeResponse
	24, // 46: info.InfoService.GetACPs:output_type -> info.GetACPsResponse
	26, // 47: info.InfoService.GetVMs:output_type -> info.GetVMsResponse
	36, // [36:48] is the sub-list for method output_type
	24, // [24:36] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_info_service_proto_init() }
func file_info_service_proto_init() {
	if File_info_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_info_service_proto_rawDesc), len(file_info_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_info_service_proto_goTypes,
		DependencyIndexes: file_info_service_proto_depIdxs,
		MessageInfos:      file_info_service_proto_msgTypes,
	}.Build()
	File_info_service_proto = out.File
	file_info_service_proto_goTypes = nil
	file_info_service_proto_depIdxs = nil
}
