load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "snowman",
    srcs = [
        "config.go",
        "engine.go",
        "issuer.go",
        "memory_block.go",
        "metrics.go",
        "voter.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/snow/engine/snowman",
    visibility = ["//visibility:public"],
    deps = [
        "//cache",
        "//cache/metercacher",
        "//ids",
        "//proto/pb/p2p",
        "//snow",
        "//snow/consensus/snowball",
        "//snow/consensus/snowman",
        "//snow/consensus/snowman/poll",
        "//snow/engine/common",
        "//snow/engine/common/tracker",
        "//snow/engine/snowman/ancestor",
        "//snow/engine/snowman/block",
        "//snow/engine/snowman/job",
        "//snow/validators",
        "//utils/bag",
        "//utils/bimap",
        "//utils/constants",
        "//utils/logging",
        "//utils/math",
        "//utils/metric",
        "//utils/set",
        "//utils/units",
        "//utils/wrappers",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "snowman_test",
    srcs = [
        "config_test.go",
        "engine_test.go",
    ],
    embed = [":snowman"],
    deps = [
        "//cache",
        "//database",
        "//ids",
        "//snow",
        "//snow/consensus/snowball",
        "//snow/consensus/snowman",
        "//snow/consensus/snowman/snowmantest",
        "//snow/engine/common",
        "//snow/engine/common/tracker",
        "//snow/engine/enginetest",
        "//snow/engine/snowman/ancestor",
        "//snow/engine/snowman/block/blocktest",
        "//snow/engine/snowman/getter",
        "//snow/snowtest",
        "//snow/validators",
        "//utils/logging",
        "//utils/set",
        "//version",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//require",
    ],
)
