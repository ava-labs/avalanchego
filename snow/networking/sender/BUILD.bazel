load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "sender",
    srcs = [
        "external_sender.go",
        "sender.go",
        "traced_sender.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/snow/networking/sender",
    visibility = ["//visibility:public"],
    deps = [
        "//ids",
        "//message",
        "//proto/pb/p2p",
        "//snow",
        "//snow/engine/common",
        "//snow/networking/router",
        "//snow/networking/timeout",
        "//subnets",
        "//trace",
        "//utils/logging",
        "//utils/set",
        "@com_github_prometheus_client_golang//prometheus",
        "@io_opentelemetry_go_otel//attribute",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "sender_test",
    srcs = [
        "mocks_generate_test.go",
        "sender_test.go",
    ],
    embed = [":sender"],
    deps = [
        "//ids",
        "//message",
        "//message/messagemock",
        "//network/p2p",
        "//proto/pb/p2p",
        "//snow",
        "//snow/engine/common",
        "//snow/engine/common/tracker",
        "//snow/engine/enginetest",
        "//snow/networking/benchlist",
        "//snow/networking/handler",
        "//snow/networking/router",
        "//snow/networking/router/routermock",
        "//snow/networking/sender/sendermock",
        "//snow/networking/sender/sendertest",
        "//snow/networking/timeout",
        "//snow/networking/timeout/timeoutmock",
        "//snow/networking/tracker",
        "//snow/snowtest",
        "//snow/validators",
        "//subnets",
        "//utils/constants",
        "//utils/logging",
        "//utils/math/meter",
        "//utils/resource",
        "//utils/set",
        "//utils/timer",
        "//version",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_mock//gomock",
    ],
)
