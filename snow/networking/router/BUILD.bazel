load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "router",
    srcs = [
        "chain_router.go",
        "chain_router_metrics.go",
        "health.go",
        "inbound_handler.go",
        "router.go",
        "traced_router.go",
    ],
    importpath = "github.com/ava-labs/avalanchego/snow/networking/router",
    visibility = ["//visibility:public"],
    deps = [
        "//api/health",
        "//ids",
        "//message",
        "//proto/pb/p2p",
        "//snow/networking/benchlist",
        "//snow/networking/handler",
        "//snow/networking/timeout",
        "//trace",
        "//utils",
        "//utils/constants",
        "//utils/linked",
        "//utils/logging",
        "//utils/set",
        "//utils/timer/mockable",
        "//version",
        "@com_github_prometheus_client_golang//prometheus",
        "@io_opentelemetry_go_otel//attribute",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "router_test",
    srcs = [
        "chain_router_test.go",
        "main_test.go",
        "mocks_generate_test.go",
    ],
    embed = [":router"],
    deps = [
        "//ids",
        "//message",
        "//network/p2p",
        "//proto/pb/p2p",
        "//snow",
        "//snow/engine/common",
        "//snow/engine/common/tracker",
        "//snow/engine/enginetest",
        "//snow/networking/benchlist",
        "//snow/networking/handler",
        "//snow/networking/handler/handlermock",
        "//snow/networking/timeout",
        "//snow/networking/tracker",
        "//snow/snowtest",
        "//snow/validators",
        "//subnets",
        "//utils/logging",
        "//utils/math/meter",
        "//utils/resource",
        "//utils/set",
        "//utils/timer",
        "//version",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_goleak//:goleak",
        "@org_uber_go_mock//gomock",
    ],
)
